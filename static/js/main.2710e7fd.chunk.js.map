{"version":3,"sources":["components/Login/Login.module.css","components/PasswordRecovery/PasswordRecovery.module.css","components/NewPassword/NewPassword.module.css","App.module.css","components/Pack/Packs.module.css","components/Profile/Profile.module.css","components/LogOut/LogOut.module.css","components/404/Component404.module.css","components/Pack/OnePack/OnePack.module.css","components/Registration/Registartion.module.css","Redux/passwordRecoveryReducer.ts","api/cardsApi.ts","Redux/app_reducer.ts","Redux/loginReducer.ts","Redux/registrationReducer.ts","Redux/authReducer.ts","Redux/cardsReducer.ts","Redux/redux_store.ts","components/Login/Login.tsx","components/Registration/Registartion.tsx","components/LogOut/LogOut.tsx","components/Profile/Profile.tsx","components/PasswordRecovery/PasswordRecovery.tsx","components/NewPassword/NewPassword.tsx","components/404/Component404.tsx","components/Navbar/Navbar.tsx","img/preloader.svg","common/Preloder/preloder.tsx","components/Pack/OnePack/OnePack.tsx","components/Pack/Packs.tsx","App.tsx","index.tsx","components/Navbar/Navbar.module.css"],"names":["module","exports","RECOVERY_ACTIONS_TYPE","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","recoveryData","cardsPackAPI","page","pageCount","get","cardsPack","packsId","initialState","status","setAppStatusAC","type","isLoggedIn","dataLogin","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","responseError","token","setLoginDataAC","value","setDataResponseAC","setResponseErrorAC","setResponseTokenAC","AUTH_ACTIONS_TYPE","isRecovered","isInfo","setRecoveryFlag","SET_RECOVERY_FlAG","setResponseErrorPassword","SET_RESPONSE_ERROR_PASSWORD","ACTION_TYPES","isRegistration","setResponseError","SET_RESPONSE_ERROR","registrationTC","dispatch","then","res","SET_REGISTRATION_DATA","catch","response","isAuth","authReducer","state","action","IS_AUTH","cardPacks","user_id","cardsCount","cardPacksTotalCount","maxCardsCount","minCardsCount","getCardsPackTC","GET_CARDS_PACK","err","rootReducer","combineReducers","login","app","registration","passwordRecovery","cards","map","pack","store","createStore","applyMiddleware","thunkMiddleware","Login","useState","setEmail","password","setPassword","setRememberMe","typePassword","setTypePassword","useDispatch","useSelector","to","PATH","profile","className","style","main","mainBlock","title","subTitle","form","formInput","placeholder","onChange","event","currentTarget","photoEye","onClick","formError","forgotPassword","checked","loginButton","askAboutAccount","singUp","Registration","confirmPassword","setConfirmPassword","setError","typeConfirmPassword","setTypeConfirmPassword","setRegistrationData","test","formInputLastChild","onKeyPress","charCode","flexButtons","cancelButton","logisterButton","LogOut","logoutHandler","useCallback","logoutButton","Profile","userData","useEffect","JSON","stringify","PasswordRecovery","isRedirect","setRedirect","onRedirectToLogin","e","textAfterInput","mainButton","passwordRecoveryThunk","from","message","tryLogin","NewPassword","useParams","newPassword","setNewPassword","resetPasswordToken","Component404","Navbar","s","nav","item","active","activeClassName","activeLink","Preloader","src","preloader","alt","OnePack","props","flexCards","onClickDeletePack","packId","href","Pack","console","log","cardsFromState","titlePacks","setTitlePacks","allPacks","flexCardsTitle","createCardsPackTC","App","navBar","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2710e7fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__2tAsx\",\"mainBlock\":\"Login_mainBlock__1G5x2\",\"title\":\"Login_title__lZBdn\",\"subTitle\":\"Login_subTitle__14e7c\",\"form\":\"Login_form__1hhFk\",\"formInput\":\"Login_formInput__16KSn\",\"photoEye\":\"Login_photoEye__wLJWK\",\"forgotPassword\":\"Login_forgotPassword__1fTzC\",\"loginButton\":\"Login_loginButton__1Sccr\",\"askAboutAccount\":\"Login_askAboutAccount__nCJ-J\",\"singUp\":\"Login_singUp__3JpKq\",\"formError\":\"Login_formError__1GuHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PasswordRecovery_main__2vZuh\",\"mainBlock\":\"PasswordRecovery_mainBlock__reQMx\",\"title\":\"PasswordRecovery_title__2zmrz\",\"subTitle\":\"PasswordRecovery_subTitle__A7aLL\",\"form\":\"PasswordRecovery_form__3Cpq3\",\"formInput\":\"PasswordRecovery_formInput__1TdMV\",\"textAfterInput\":\"PasswordRecovery_textAfterInput__1m3Y-\",\"mainButton\":\"PasswordRecovery_mainButton__w_w48\",\"askAboutAccount\":\"PasswordRecovery_askAboutAccount__2DHa5\",\"tryLogin\":\"PasswordRecovery_tryLogin__2RmXp\",\"formError\":\"PasswordRecovery_formError__3uCwj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewPassword_main__2CUAN\",\"mainBlock\":\"NewPassword_mainBlock__RS3PP\",\"title\":\"NewPassword_title__abATx\",\"subTitle\":\"NewPassword_subTitle__2Hpgc\",\"form\":\"NewPassword_form__uvyTc\",\"formInput\":\"NewPassword_formInput__2sRYK\",\"textAfterInput\":\"NewPassword_textAfterInput__JX1IF\",\"mainButton\":\"NewPassword_mainButton__2J3Pe\",\"askAboutAccount\":\"NewPassword_askAboutAccount__SYMGX\",\"tryLogin\":\"NewPassword_tryLogin__1Nj_k\",\"formError\":\"NewPassword_formError__12dAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3B6xn\",\"navBar\":\"App_navBar__Uw4Ck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__2OusS\",\"flexCards\":\"Packs_flexCards__1oujt\",\"flexCardsTitle\":\"Packs_flexCardsTitle__1KS4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__2R8MS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutButton\":\"LogOut_logoutButton__3HU60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Component404_main__1G5Ai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"OnePack_main__2nR7C\",\"flexCards\":\"OnePack_flexCards__1By0q\",\"flexCardsTitle\":\"OnePack_flexCardsTitle__2UEEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Registartion_main__2nFAq\",\"mainBlock\":\"Registartion_mainBlock__2ngAa\",\"title\":\"Registartion_title__10gqU\",\"subTitle\":\"Registartion_subTitle__2QVU-\",\"form\":\"Registartion_form__21zcr\",\"formInput\":\"Registartion_formInput__2GrTG\",\"photoEye\":\"Registartion_photoEye__27lRL\",\"formInputLastChild\":\"Registartion_formInputLastChild__2-cEU\",\"formError\":\"Registartion_formError__3hMlL\",\"flexButtons\":\"Registartion_flexButtons__3Df7a\",\"cancelButton\":\"Registartion_cancelButton__jWrpm\",\"logisterButton\":\"Registartion_logisterButton__2yPZA\"};","import { Dispatch } from \"redux\";\r\nimport { authAPI, PasswordRecoveryDataType } from \"../api/cardsApi\";\r\nimport { ErrorDataType } from \"./registrationReducer\";\r\nimport { setAppStatusAC } from \"./app_reducer\";\r\n\r\nexport enum RECOVERY_ACTIONS_TYPE {\r\n    SET_RECOVERY_FlAG = \"SET_RECOVERY_FlAG\",\r\n    SET_RESPONSE_ERROR_PASSWORD = \"SET_RESPONSE_ERROR_PASSWORD\"\r\n}\r\n\r\nlet initialState = {\r\n    isRecovered: false,\r\n    responseError: '',\r\n    isInfo: true\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: PasswordRecoveryReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FlAG:\r\n            return { ...state, isRecovered: action.isRecovered }\r\n        case RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR_PASSWORD:\r\n            return { ...state, responseError: action.responseError }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setRecoveryFlag = (isRecovered: boolean) => ({\r\n    type: RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FlAG, isRecovered\r\n} as const)\r\nexport const setResponseErrorPassword = (responseError: string) => ({\r\n    type: RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR_PASSWORD, responseError\r\n} as const)\r\n\r\n//thunks\r\n\r\nexport const passwordRecoveryThunk = (recoveryData: PasswordRecoveryDataType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.passwordRecovery(recoveryData)\r\n        .then(res => {\r\n            dispatch(setRecoveryFlag(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorPassword(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const setNewPasswordTC = (data: setNewPasswordTCType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.setNewPassword(data).then(res => {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    }).catch(err => {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    })\r\n}\r\n\r\nexport type setNewPasswordTCType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nexport type PasswordRecoveryReducerActionsType =\r\n    ReturnType<typeof setRecoveryFlag>\r\n    | ReturnType<typeof setResponseErrorPassword>\r\n\r\n\r\n","import axios from 'axios'\r\nimport { setNewPasswordTCType } from '../Redux/passwordRecoveryReducer'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    registration(data: RegistrationDataType) {\r\n        return instance.post('auth/register', data)\r\n    },\r\n    login(data: LoginType) {\r\n        return instance.post<ResponseType>(\"auth/login\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me', {})\r\n    },\r\n    passwordRecovery(recoveryData: PasswordRecoveryDataType) {\r\n        return instance.post('auth/forgot', recoveryData)\r\n    },\r\n    isAuth() {\r\n        return instance.post('auth/me')\r\n    },\r\n    setNewPassword(data: setNewPasswordTCType) {\r\n        return instance.post('auth/set-new-password', data)\r\n    }\r\n}\r\n//min=${min}&max=${max}&\r\nexport const cardsPackAPI = {\r\n    getCardsPack(min: number = 3, max: number = 9, page: number = 1, pageCount: number = 10) {\r\n        return instance.get(`cards/pack?page=${page}&pageCount=${pageCount}&sortPacks=0updated`)\r\n    },\r\n    createCardsPack(cardsPack: any) {\r\n        return instance.post('cards/pack', cardsPack);\r\n    },\r\n    deleteCardsPack(packsId: string) {\r\n        return instance.delete(`cards/pack?id=${packsId}`)\r\n    }\r\n}\r\n//Types\r\nexport type LoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe?: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string | null\r\n    publicCardPacksCount: number\r\n    created: string;\r\n    updated: string;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error: string;\r\n    token: string\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type PasswordRecoveryDataType = {\r\n    email: string,\r\n    from: string,\r\n    message: string\r\n}","\r\n//Types\r\nexport type RequestStatusType = 'loading' | 'succeeded'\r\n\r\nconst initialState = {\r\n    status: 'succeeded' as RequestStatusType\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type AppReducerActionType = SetAppStatus\r\nexport type SetAppStatus = ReturnType<typeof setAppStatusAC>\r\n\r\n//Reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppReducerActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return { ...state, status: action.status };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return { type: 'APP/SET-STATUS', status } as const\r\n}\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport { authAPI, LoginType, ResponseType } from \"../api/cardsApi\";\r\nimport { setAppStatusAC } from \"./app_reducer\";\r\nimport { ErrorDataType } from \"./registrationReducer\";\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    dataLogin: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: 0,\r\n        created: \"\",\r\n        updated: \"\",\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: \"\",\r\n    },\r\n    responseError: \"\",\r\n    token: ''\r\n}\r\n\r\nexport type InitialStateLoginType = typeof initialState;\r\n\r\nexport const loginReducer = (state: InitialStateLoginType = initialState, action: LoginReducerActionType): InitialStateLoginType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-LOGIN-DATA\":\r\n            return { ...state, isLoggedIn: action.value }\r\n        case \"LOGIN/SET-DATA\":\r\n            return { ...state, dataLogin: action.data }\r\n        case \"LOGIN/SET-RESPONSE-ERROR\":\r\n            return { ...state, responseError: action.responseError }\r\n        case 'LOGIN/SET-RESPONSE-TOKEN':\r\n            return { ...state, token: action.token }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setLoginDataAC = (value: boolean) =>\r\n    ({ type: \"LOGIN/SET-LOGIN-DATA\", value } as const)\r\nexport const setDataResponseAC = (data: ResponseType) =>\r\n    ({ type: \"LOGIN/SET-DATA\", data } as const)\r\nexport const setResponseErrorAC = (responseError: string) =>\r\n    ({ type: \"LOGIN/SET-RESPONSE-ERROR\", responseError } as const)\r\nexport const setResponseTokenAC = (token: string) =>\r\n    ({ type: \"LOGIN/SET-RESPONSE-TOKEN\", token } as const)\r\n\r\n//Thunks\r\nexport const loginTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.login(data)\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setDataResponseAC(res.data))\r\n            dispatch(setResponseTokenAC(res.data.token))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorAC(error.response.data.error))\r\n        })\r\n}\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.logout()\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(false))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorAC(error.response.data.error))\r\n        })\r\n}\r\n\r\n//Types\r\nexport type LoginReducerActionType =\r\n    ReturnType<typeof setLoginDataAC>\r\n    | ReturnType<typeof setDataResponseAC>\r\n    | ReturnType<typeof setResponseErrorAC>\r\n    | ReturnType<typeof setResponseTokenAC>\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport { authAPI, RegistrationDataType } from \"../api/cardsApi\";\r\nimport { setAppStatusAC } from \"./app_reducer\";\r\n\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n\tSET_REGISTRATION_DATA = \"SET_REGISTRATION_DATA\",\r\n\tSET_RESPONSE_ERROR = \"SET_RESPONSE_ERROR\"\r\n}\r\n\r\nlet initialState = {\r\n\tisRegistration: false,\r\n\tresponseError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: RegistrationReducerActionsType): InitialStateType => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA:\r\n\t\t\treturn { ...state, isRegistration: action.isRegistration }\r\n\t\tcase AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR:\r\n\t\t\treturn { ...state, responseError: action.responseError }\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n}\r\n\r\n// actions\r\n\r\nexport const setRegistrationData = (isRegistration: boolean) => ({ type: AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA, isRegistration } as const)\r\nexport const setResponseError = (responseError: string) => ({ type: AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR, responseError } as const)\r\n\r\n//thunks\r\n\r\nexport const registrationTC = (data: RegistrationDataType) => (dispatch: Dispatch) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tauthAPI.registration(data).then(res => {\r\n\t\tdispatch(setRegistrationData(true))\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t}).catch((error: ErrorDataType) => {\r\n\t\tdispatch(setResponseError(error.response.data.error))\r\n\t})\r\n}\r\n\r\nexport type RegistrationReducerActionsType =\r\n\tReturnType<typeof setRegistrationData> |\r\n\tReturnType<typeof setResponseError>\r\n\r\nexport type ErrorDataType = {\r\n\tresponse: {\r\n\t\tdata: ErrorRegistration\r\n\t}\r\n}\r\n\r\nexport type ErrorRegistration = {\r\n\temailRegExp: {},\r\n\terror: string\r\n\tin: string\r\n\tisEmailValid: boolean\r\n\tisPassValid: boolean\r\n\tpasswordRegExp: string\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { authAPI } from \"../api/cardsApi\";\r\nimport { setDataResponseAC, setLoginDataAC, setResponseTokenAC } from \"./loginReducer\";\r\nimport { ErrorDataType } from \"./registrationReducer\";\r\n\r\n\r\nexport enum ACTION_TYPES {\r\n    IS_AUTH = \"IS_AUTH\"\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setIsAuth>\r\n\r\nlet initialState = {\r\n    isAuth: false\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst authReducer = (state: initialStateType = initialState, action: ProfileActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.IS_AUTH:\r\n            return {\r\n                ...state, isAuth: action.isAuth\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsAuth = (isAuth: boolean) => ({ type: ACTION_TYPES.IS_AUTH, isAuth } as const)\r\n\r\nexport const isAuthTC = () => (dispatch: Dispatch) => {\r\n    authAPI.isAuth()\r\n        .then(res => {\r\n            dispatch(setDataResponseAC(res.data))\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setResponseTokenAC(res.data.token))\r\n        }\r\n        )\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setLoginDataAC(false))\r\n        })\r\n}\r\n\r\nexport default authReducer;","import { Dispatch } from '@reduxjs/toolkit';\r\nimport React from 'react';\r\nimport { cardsPackAPI } from '../api/cardsApi';\r\nimport { AppThunk } from './redux_store';\r\n\r\n\r\nexport enum ACTION_TYPES {\r\n\tGET_CARDS_PACK = 'GET_CARDS_PACK'\r\n}\r\n\r\n\r\nconst initialState = {\r\n\tcardPacks: [\r\n\t\t{\r\n\t\t\t_id: '',\r\n\t\t\tuser_id: '',\r\n\t\t\tname: '',\r\n\t\t\tcardsCount: 0,\r\n\t\t\tcreated: '',\r\n\t\t\tupdated: ''\r\n\t\t}\r\n\t],\r\n\tcardPacksTotalCount: 0,\r\n\tmaxCardsCount: 0,\r\n\tminCardsCount: 0,\r\n\tpage: 0,\r\n\tpageCount: 0\r\n}\r\n\r\nexport type initialCardsStateType = typeof initialState;\r\n\r\n\r\nexport const cardsReducer = (state: initialCardsStateType = initialState, action: CardsPackActionType): initialCardsStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase ACTION_TYPES.GET_CARDS_PACK:\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state, cardPacks: action.data.cardPacks.map(pack => ({ ...pack }))\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport const getAllCardsPackAC = (data: initialCardsStateType) => ({ type: ACTION_TYPES.GET_CARDS_PACK, data })\r\n\r\n\r\n\r\nexport const getCardsPackTC = () => (dispatch: Dispatch) => {\r\n\tcardsPackAPI.getCardsPack().then(res => {\r\n\t\tdispatch(getAllCardsPackAC(res.data))\r\n\t}).catch(err => {\r\n\t})\r\n}\r\n\r\nexport const createCardsPackTC = (cardsPack: any): AppThunk => dispatch => {\r\n\tcardsPackAPI.createCardsPack(cardsPack).then(res => {\r\n\t\tdispatch(getCardsPackTC())\r\n\t}).catch(err => {\r\n\t})\r\n}\r\n\r\nexport const deleteCardsPackTC = (packsId: string): AppThunk => dispatch => {\r\n\tcardsPackAPI.deleteCardsPack(packsId).then(res => {\r\n\t\tdispatch(getCardsPackTC())\r\n\t}).catch(err => {\r\n\t})\r\n}\r\n\r\nexport type CardsPackActionType = ReturnType<typeof getAllCardsPackAC>","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { loginReducer, LoginReducerActionType } from \"./loginReducer\";\r\nimport { passwordRecoveryReducer, PasswordRecoveryReducerActionsType } from \"./passwordRecoveryReducer\";\r\nimport { appReducer, AppReducerActionType } from \"./app_reducer\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport { registrationReducer, RegistrationReducerActionsType } from \"./registrationReducer\";\r\nimport authReducer, { ProfileActionsType } from \"./authReducer\";\r\nimport { CardsPackActionType, cardsReducer } from \"./cardsReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    app: appReducer,\r\n    registration: registrationReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    isAuth: authReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\n\r\ntype AppActionType = AppReducerActionType | ProfileActionsType | CardsPackActionType | LoginReducerActionType | PasswordRecoveryReducerActionsType | RegistrationReducerActionsType;\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppThunk = ThunkAction<void, AppStateType, unknown, AppActionType>","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './Login.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from \"../../Redux/redux_store\";\r\nimport {loginTC, setResponseErrorAC} from \"../../Redux/loginReducer\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const [typePassword, setTypePassword] = useState<string>('password')\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n    const responseError = useSelector<AppStateType, string>(state => state.login.responseError)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.profile} />\r\n    }\r\n\r\n    const setUserData = () => {\r\n        dispatch(loginTC({ email, password, rememberMe }))\r\n    }\r\n    const onSetUpEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpRememberMe = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n    const onClickTypePassword = () => {\r\n        if (typePassword === 'password') {\r\n            setTypePassword('text')\r\n        } else if (typePassword === 'text') {\r\n            setTypePassword('password')\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Sign In\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onSetUpEmail} />\r\n                    </div>\r\n                    <div className={style.formInput}>\r\n                        <input type={typePassword} placeholder='Enter your password' onChange={onSetUpPassword} />\r\n                        <span className={style.photoEye} onClick={onClickTypePassword} />\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <div className={style.forgotPassword}>\r\n                        <input type={\"checkbox\"} checked={rememberMe} onChange={onSetUpRememberMe} />RememberMe\r\n                    </div>\r\n                    <div>\r\n                        <button className={style.loginButton} onClick={setUserData}>Login</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.askAboutAccount}>\r\n                    <span>Don’t have an account?</span>\r\n                </div>\r\n                <div className={style.singUp}>\r\n                    <span>Sign Up</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registrationTC, setResponseError } from '../../Redux/registrationReducer';\r\nimport { AppStateType } from '../../Redux/redux_store';\r\nimport style from './Registartion.module.css';\r\nimport { Redirect } from 'react-router';\r\nimport { PATH } from '../../App';\r\n\r\nconst Registration = () => {\r\n  const dispatch = useDispatch();\r\n  const isRegistration = useSelector<AppStateType, boolean>(state => state.registration.isRegistration)\r\n  const responseError = useSelector<AppStateType, string>(state => state.registration.responseError)\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n  const [email, setEmail] = useState<string>('')\r\n  const [password, setPassword] = useState<string>('')\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n  const [error, setError] = useState<string>('');\r\n  const [typePassword, setTypePassword] = useState<string>('password')\r\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState<string>('password')\r\n\r\n  const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n  const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n  const onChangeConfirmPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(event.currentTarget.value)\r\n  }\r\n  const onKeyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.charCode === 13) {\r\n      setRegistrationData()\r\n    }\r\n  }\r\n  const onClickTypePassword = () => {\r\n    if (typePassword === 'password') {\r\n      setTypePassword('text')\r\n    } else if (typePassword === 'text') {\r\n      setTypePassword('password')\r\n    }\r\n  }\r\n\r\n  const onClickTypeConfirmPassword = () => {\r\n    if (typeConfirmPassword === 'password') {\r\n      setTypeConfirmPassword('text')\r\n    } else if (typeConfirmPassword === 'text') {\r\n      setTypeConfirmPassword('password')\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const setRegistrationData = () => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n      setError('Неверный логин')\r\n    } /* else if (!/^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8,}$/i.test(password)) {\r\n      setError('Неверный пароль')\r\n    } */ else {\r\n      if (password === confirmPassword) {\r\n        dispatch(registrationTC({ email, password }))\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('')\r\n      } else {\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('Пароль не совпадает')\r\n      }\r\n    }\r\n  }\r\n  const onChangeCancel = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setEmail('')\r\n    setPassword('')\r\n    setConfirmPassword('')\r\n    setError('')\r\n    dispatch(setResponseError(''))\r\n  }\r\n\r\n  if (isRegistration) {\r\n    return <Redirect to={PATH.login} />\r\n  }\r\n  if (isAuth) {\r\n    return <Redirect to={PATH.profile} />\r\n  }\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.mainBlock}>\r\n        <div className={style.title}>\r\n          It-incubator\r\n        </div>\r\n        <div className={style.subTitle}>\r\n          Sign Up\r\n        </div>\r\n        <div className={style.form}>\r\n          <div className={style.formInput}>\r\n            <input type=\"email\" placeholder='Enter your email' value={email} onChange={onChangeEmail} />\r\n          </div>\r\n          <div className={`${style.formInput}`}>\r\n            <input type={typePassword} placeholder='Enter your password' value={password} onChange={onChangePassword} />\r\n            <span className={style.photoEye} onClick={onClickTypePassword} />\r\n          </div>\r\n          <div className={`${style.formInput} ${style.formInputLastChild}`}>\r\n            <input type={typeConfirmPassword} placeholder='Confirm your password' value={confirmPassword} onKeyPress={onKeyPressHandler} onChange={onChangeConfirmPassword} />\r\n            <span className={style.photoEye} onClick={onClickTypeConfirmPassword} />\r\n            <span className={style.formError}>{error ? error : responseError ? responseError : ''}</span>\r\n          </div>\r\n          <div className={style.flexButtons}>\r\n            <div >\r\n              <button className={style.cancelButton} onClick={onChangeCancel}>Cancel</button>\r\n            </div>\r\n            <div>\r\n              <button className={style.logisterButton} onClick={setRegistrationData}>Register</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Registration;\r\n\r\n","import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport style from './LogOut.module.css'\r\nimport {logoutTC} from \"../../Redux/loginReducer\";\r\n\r\nexport const LogOut= () => {\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [dispatch])\r\n\r\n    return <>\r\n        <button className={style.logoutButton} onClick={logoutHandler}>LOGOUT</button>\r\n    </>\r\n}","import React, {useEffect} from 'react';\r\nimport style from './Profile.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux_store\";\r\nimport {isAuthTC} from '../../Redux/authReducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../App';\r\nimport {LogOut} from \"../LogOut/LogOut\";\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector<AppStateType, dataLoginType>(state => state.login.dataLogin)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    useEffect(() => {\r\n        if (!userData.created) {\r\n            dispatch(isAuthTC());\r\n        }\r\n    }, [])\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.login}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            {JSON.stringify(userData)}\r\n            <button><LogOut/></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n\r\ntype dataLoginType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string\r\n    avatar: string | null,\r\n    publicCardPacksCount: number,\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n}","import React, { ChangeEvent, useState } from 'react';\r\nimport style from './PasswordRecovery.module.css';\r\nimport { passwordRecoveryThunk, setResponseErrorPassword } from \"../../Redux/passwordRecoveryReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../Redux/redux_store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst PasswordRecovery = () => {\r\n    const isRecovered = useSelector<AppStateType, boolean>(state => state.passwordRecovery.isRecovered)\r\n    const responseError = useSelector<AppStateType, string>(state => state.passwordRecovery.responseError)\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [isRedirect, setRedirect] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setResponseErrorPassword(\"\"))\r\n    }\r\n    const onSendEmail = () => {\r\n        const recoveryData = {\r\n            email: email,\r\n            from: 'test-front-admin <ai73a@yandex.by>)',\r\n            message: `<div style=\"background-color: lime; padding: 15px\"> \r\n                        password recovery link: <a href='https://tropicdenis.github.io/friday_project/#/newPassword/$token$'>link</a>\r\n                      </div>`\r\n        };\r\n        dispatch(passwordRecoveryThunk(recoveryData))\r\n    }\r\n\r\n    if (isRecovered) {\r\n        return (<Redirect to={'/newPassword'} />)\r\n    }\r\n    const onRedirectToLogin = () => {\r\n        setRedirect(true)\r\n    }\r\n    if (isRedirect) {\r\n        return (<Redirect to={'/login'} />)\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Forgot your password?\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onChangeEmail} value={email} />\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <p className={style.textAfterInput}>\r\n                        Enter your email address and we will send you further instructions\r\n                    </p>\r\n                    <div>\r\n                        <button className={style.mainButton} onClick={onSendEmail}>Send Instructions</button>\r\n                    </div>\r\n                </div>\r\n                <div className={style.askAboutAccount} onClick={onRedirectToLogin}>\r\n                    <span>Did you remember your password?</span>\r\n                </div>\r\n                <div className={style.tryLogin} onClick={onRedirectToLogin}>\r\n                    <span>Try logging in</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordRecovery;\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport style from './NewPassword.module.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setNewPasswordTC, setRecoveryFlag } from \"../../Redux/passwordRecoveryReducer\";\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { AppStateType } from '../../Redux/redux_store';\r\nimport { PATH } from '../../App';\r\n\r\nconst NewPassword = () => {\r\n\r\n  const isInfo = useSelector<AppStateType, boolean>(state => state.passwordRecovery.isInfo)\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  dispatch(setRecoveryFlag(false))\r\n\r\n  const { token } = useParams<{ token: string }>()\r\n  const [newPassword, setNewPassword] = useState('')\r\n\r\n  const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPassword(e.currentTarget.value);\r\n  }\r\n\r\n  const onChangeNewPasswordAPI = () => {\r\n    dispatch(setNewPasswordTC({ password: newPassword, resetPasswordToken: token }))\r\n  }\r\n\r\n  if (!isInfo) {\r\n    return <Redirect to={PATH.login} />\r\n  }\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.mainBlock}>\r\n        <div className={style.title}>\r\n          It-incubator\r\n        </div>\r\n        <div className={style.subTitle}>\r\n          Forgot your password?\r\n        </div>\r\n        <div className={style.form}>\r\n          <div className={style.formInput}>\r\n            <input type=\"password\" placeholder='Enter your new password' value={newPassword} onChange={onChangeNewPassword} />\r\n            <span className={style.formError} />\r\n          </div>\r\n          <p className={style.textAfterInput}>\r\n            Create new password and we will send you further instructions to email\r\n            </p>\r\n          <div>\r\n            <button onClick={onChangeNewPasswordAPI} className={style.mainButton}>Create new password</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewPassword;\r\n","import React from 'react';\r\nimport style from './Component404.module.css';\r\n\r\nconst Component404 = () => {\r\n  return (\r\n    <div className={style.main}>\r\n      Page not found!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Component404;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to={\"/registration\"} activeClassName={s.activeLink}>Registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/login\"} activeClassName={s.activeLink}>Login</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/profile\"} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/passwordRecovery\"} activeClassName={s.activeLink}>PasswordRecovery</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={`/newPassword/`} activeClassName={s.activeLink}>NewPassword</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={`/pack/`} activeClassName={s.activeLink}>Pack</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/preloader.b0090460.svg\";","import React from \"react\";\r\nimport preloader from \"../../img/preloader.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <img src={preloader} alt={\"\"}/>\r\n}\r\n\r\n","import React from 'react';\r\nimport style from '../OnePack/OnePack.module.css';\r\n\r\ntype OnePackType = {\r\n\tpackId: string\r\n\tname: string\r\n\tcardsCount: number\r\n\tupdated: string\r\n\tonClickDeletePack: (packId: string) => void\r\n}\r\n\r\nexport const OnePack = (props: OnePackType) => {\r\n\r\n\tconst onClickDeletePackOnButton = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\tprops.onClickDeletePack(props.packId)\r\n\t}\r\n\r\n\treturn <div className={style.flexCards}>\r\n\t\t<div>{props.name}</div>\r\n\t\t<div>{props.cardsCount}</div>\r\n\t\t<div>{props.updated}</div>\r\n\t\t<div><button onClick={onClickDeletePackOnButton}>delete</button></div>\r\n\t\t<div><button>update</button></div>\r\n\t\t<div><a href=\"#\">cards</a></div>\r\n\t</div>\r\n}","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCardsPackTC, deleteCardsPackTC, getCardsPackTC, initialCardsStateType } from '../../Redux/cardsReducer';\r\nimport { AppStateType } from '../../Redux/redux_store';\r\nimport style from '../Pack/Packs.module.css';\r\nimport { OnePack } from './OnePack/OnePack';\r\n\r\n\r\n\r\n\r\nconst Pack = () => {\r\n\tconsole.log('main Pack');\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst cardsFromState = useSelector<AppStateType, initialCardsStateType>(state => state.cards);\r\n\tconst [titlePacks, setTitlePacks] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getCardsPackTC())\r\n\t}, [])\r\n\r\n\r\n\tconst onChangeNewTitlePacks = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetTitlePacks(event.currentTarget.value);\r\n\t}\r\n\r\n\tconst cardsPack = {\r\n\t\tname: titlePacks\r\n\t}\r\n\r\n\tconst onClickCreateCardsPack = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\tdispatch(createCardsPackTC({ cardsPack }));\r\n\t\tsetTitlePacks('')\r\n\t}\r\n\tconst onClickDeletePack = useCallback((packId: string) => {\r\n\t\tdispatch(deleteCardsPackTC(packId))\r\n\t}, [cardsFromState])\r\n\r\n\r\n\tconst allPacks = cardsFromState.cardPacks.map(pack => <OnePack\r\n\t\tpackId={pack._id}\r\n\t\tname={pack.name}\r\n\t\tcardsCount={pack.cardsCount}\r\n\t\tupdated={pack.updated}\r\n\t\tonClickDeletePack={onClickDeletePack}\r\n\t/>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className={style.main} >\r\n\t\t\t<div>PacksPage</div>\r\n\t\t\t<div className={style.flexCardsTitle}>\r\n\t\t\t\t<div>name</div>\r\n\t\t\t\t<div>cardsCount</div>\r\n\t\t\t\t<div>updated</div>\r\n\t\t\t\t<div><input type=\"text\" value={titlePacks} onChange={onChangeNewTitlePacks} /></div>\r\n\r\n\t\t\t\t<div><button onClick={onClickCreateCardsPack}>add</button></div>\r\n\t\t\t</div>\r\n\t\t\t<div>{allPacks}</div>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default Pack;\r\n\r\n\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport style from './App.module.css';\r\nimport { Login } from \"./components/Login/Login\";\r\nimport Registration from './components/Registration/Registartion';\r\nimport Profile from './components/Profile/Profile';\r\nimport PasswordRecovery from './components/PasswordRecovery/PasswordRecovery';\r\nimport NewPassword from './components/NewPassword/NewPassword';\r\nimport Component404 from \"./components/404/Component404\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport { Preloader } from \"./common/Preloder/preloder\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"./Redux/redux_store\";\r\nimport Pack from './components/Pack/Packs';\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    registration: '/registration',\r\n    profile: '/profile',\r\n    Component404: '/404',\r\n    passwordRecovery: '/passwordRecovery',\r\n    newPassword: '/newPassword/:token?',\r\n    pack: '/pack'\r\n}\r\n\r\nexport const App = () => {\r\n    const status = useSelector<AppStateType, string>(state => state.app.status)\r\n    return (\r\n        <div className={style.app}>\r\n            <div className={style.navBar}><Navbar /></div>\r\n            {status === 'loading' && <Preloader />}\r\n            <Switch>\r\n                <Route path={PATH.login} render={() => <Login />} />\r\n                <Route path={PATH.registration} render={() => <Registration />} />\r\n                <Route path={PATH.profile} render={() => <Profile />} />\r\n                <Route path={PATH.Component404} render={() => <Component404 />} />\r\n                <Route path={PATH.passwordRecovery} render={() => <PasswordRecovery />} />\r\n                <Route path={PATH.newPassword} render={() => <NewPassword />} />\r\n                <Route path={PATH.pack} render={() => <Pack />} />\r\n                <Redirect from={'/'} to={PATH.profile} />\r\n                <Redirect from={'*'} to={\"/404\"} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport {store} from \"./Redux/redux_store\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3F_zz\",\"item\":\"Navbar_item__2ehsX\",\"activeLink\":\"Navbar_activeLink__3dl9h\"};"],"sourceRoot":""}