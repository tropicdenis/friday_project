{"version":3,"sources":["components/Navbar/Navbar.module.css","components/PasswordRecovery/PasswordRecovery.module.css","components/NewPassword/NewPassword.module.css","App.module.css","components/Profile/Profile.module.css","components/404/Component404.module.css","Redux/passwordRecoveryReducer.ts","api/cardsApi.ts","Redux/loginReducer.ts","Redux/registrationReducer.ts","Redux/app_reducer.ts","Redux/authReducer.ts","Redux/redux_store.ts","components/Login/Login.tsx","components/Registration/Registartion.tsx","components/Profile/Profile.tsx","components/PasswordRecovery/PasswordRecovery.tsx","components/NewPassword/NewPassword.tsx","components/404/Component404.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx","components/Registration/Registartion.module.css","components/Login/Login.module.css"],"names":["module","exports","RECOVERY_ACTIONS_TYPE","instance","axios","create","baseURL","withCredentials","authAPI","data","post","recoveryData","initialState","isLoggedIn","dataLogin","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","responseError","setLoginDataAC","value","type","setDataResponseAC","setResponseErrorAC","AUTH_ACTIONS_TYPE","isRecovered","info","setRecoveryFlag","SET_RECOVERY_FlAG","setResponseErrorPassword","SET_RESPONSE_ERROR_PASSWORD","setResponseInfoPassword","SET_RESPONSE_INFO_PASSWORD","APP_ACT","profileReducer","state","action","ACTION_TYPES","isRegistration","setResponseError","SET_RESPONSE_ERROR","registrationTC","dispatch","then","res","SET_REGISTRATION_DATA","catch","response","isAuth","authReducer","IS_AUTH","rootReducer","combineReducers","login","app","appReducer","registration","passwordRecovery","store","createStore","applyMiddleware","thunkMiddleware","Login","useState","setEmail","password","setPassword","setRememberMe","typePassword","setTypePassword","useDispatch","useSelector","to","className","style","main","mainBlock","title","subTitle","form","formInput","placeholder","onChange","event","currentTarget","photoEye","onClick","formError","forgotPassword","checked","loginButton","askAboutAccount","singUp","Registration","confirmPassword","setConfirmPassword","setError","typeConfirmPassword","setTypeConfirmPassword","setRegistrationData","test","PATH","profile","formInputLastChild","onKeyPress","charCode","flexButtons","cancelButton","logisterButton","Profile","userData","useEffect","JSON","stringify","PasswordRecovery","isRedirect","setRedirect","onRedirectToLogin","e","textAfterInput","mainButton","passwordRecoveryThunk","from","message","tryLogin","NewPassword","isInfo","token","useParams","newPassword","setNewPassword","resetPasswordToken","err","Component404","Navbar","s","nav","item","active","activeClassName","activeLink","App","navBar","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.46f4b7f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3F_zz\",\"item\":\"Navbar_item__2ehsX\",\"activeLink\":\"Navbar_activeLink__3dl9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PasswordRecovery_main__2vZuh\",\"mainBlock\":\"PasswordRecovery_mainBlock__reQMx\",\"title\":\"PasswordRecovery_title__2zmrz\",\"subTitle\":\"PasswordRecovery_subTitle__A7aLL\",\"form\":\"PasswordRecovery_form__3Cpq3\",\"formInput\":\"PasswordRecovery_formInput__1TdMV\",\"textAfterInput\":\"PasswordRecovery_textAfterInput__1m3Y-\",\"mainButton\":\"PasswordRecovery_mainButton__w_w48\",\"askAboutAccount\":\"PasswordRecovery_askAboutAccount__2DHa5\",\"tryLogin\":\"PasswordRecovery_tryLogin__2RmXp\",\"formError\":\"PasswordRecovery_formError__3uCwj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewPassword_main__2CUAN\",\"mainBlock\":\"NewPassword_mainBlock__RS3PP\",\"title\":\"NewPassword_title__abATx\",\"subTitle\":\"NewPassword_subTitle__2Hpgc\",\"form\":\"NewPassword_form__uvyTc\",\"formInput\":\"NewPassword_formInput__2sRYK\",\"textAfterInput\":\"NewPassword_textAfterInput__JX1IF\",\"mainButton\":\"NewPassword_mainButton__2J3Pe\",\"askAboutAccount\":\"NewPassword_askAboutAccount__SYMGX\",\"tryLogin\":\"NewPassword_tryLogin__1Nj_k\",\"formError\":\"NewPassword_formError__12dAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3B6xn\",\"navBar\":\"App_navBar__Uw4Ck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__2R8MS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Component404_main__1G5Ai\"};","import { Dispatch } from \"redux\";\r\nimport { authAPI, PasswordRecoveryDataType } from \"../api/cardsApi\";\r\nimport { ErrorDataType } from \"./registrationReducer\";\r\n\r\nexport enum RECOVERY_ACTIONS_TYPE {\r\n    SET_RECOVERY_FlAG = \"SET_RECOVERY_FlAG\",\r\n    SET_RESPONSE_ERROR_PASSWORD = \"SET_RESPONSE_ERROR_PASSWORD\",\r\n    SET_RESPONSE_INFO_PASSWORD = \"SET_RESPONSE_INFO_PASSWORD\",\r\n\r\n}\r\n\r\nlet initialState = {\r\n    isRecovered: false,\r\n    responseError: '',\r\n    info: true\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FlAG:\r\n            return { ...state, isRecovered: action.isRecovered }\r\n        case RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR_PASSWORD:\r\n            return { ...state, responseError: action.responseError }\r\n        case RECOVERY_ACTIONS_TYPE.SET_RESPONSE_INFO_PASSWORD:\r\n            return { ...state, info: action.info }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setRecoveryFlag = (isRecovered: boolean) => ({\r\n    type: RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FlAG,\r\n    isRecovered\r\n} as const)\r\nexport const setResponseErrorPassword = (responseError: string) => ({\r\n    type: RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR_PASSWORD,\r\n    responseError\r\n} as const)\r\nexport const setResponseInfoPassword = (info: boolean) => ({\r\n    type: RECOVERY_ACTIONS_TYPE.SET_RESPONSE_INFO_PASSWORD,\r\n    info\r\n} as const)\r\n\r\n//thunks\r\n\r\nexport const passwordRecoveryThunk = (recoveryData: PasswordRecoveryDataType) => (dispatch: Dispatch) => {\r\n    authAPI.passwordRecovery(recoveryData).then(res => {\r\n        dispatch(setRecoveryFlag(true))\r\n        dispatch(setResponseInfoPassword(false))\r\n    }).catch((error: ErrorDataType) => {\r\n        dispatch(setResponseErrorPassword(error.response.data.error))\r\n    })\r\n}\r\n\r\nexport const setNewPasswordTC = (data: setNewPasswordTCType) => (dispatch: Dispatch) => {\r\n    authAPI.setNewPassword(data).then(res => {\r\n        dispatch(setResponseInfoPassword(false))\r\n    }).catch(err => {\r\n\r\n    })\r\n}\r\n\r\nexport type setNewPasswordTCType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof setRecoveryFlag>\r\n    | ReturnType<typeof setResponseErrorPassword>\r\n    | ReturnType<typeof setResponseInfoPassword>\r\n\r\n\r\n","import axios from 'axios'\r\nimport { setNewPasswordTCType } from '../Redux/passwordRecoveryReducer'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    registration(data: RegistrationDataType) {\r\n        return instance.post('auth/register', data)\r\n    },\r\n    login(data: LoginType) {\r\n        return instance.post<ResponseType>(\"auth/login\", data)\r\n    },\r\n    passwordRecovery(recoveryData: PasswordRecoveryDataType) {\r\n        return instance.post('auth/forgot', recoveryData)\r\n    },\r\n    isAuth() {\r\n        return instance.post('auth/me')\r\n    },\r\n    setNewPassword(data: setNewPasswordTCType) {\r\n        return instance.post('auth/set-new-password', data)\r\n    }\r\n}\r\n//Types\r\nexport type LoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe?: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string | null\r\n    publicCardPacksCount: number\r\n    created: string;\r\n    updated: string;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error: string;\r\n    token: string\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type PasswordRecoveryDataType = {\r\n    email: string,\r\n    from: string,\r\n    message: string\r\n}","import { Dispatch } from \"redux\";\r\nimport { authAPI, LoginType, ResponseType } from \"../api/cardsApi\";\r\nimport { ErrorDataType } from \"./registrationReducer\";\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    dataLogin: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: 0,\r\n        created: \"\",\r\n        updated: \"\",\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: \"\",\r\n    },\r\n    responseError: \"\"\r\n}\r\n\r\nexport type InitialStateLoginType = typeof initialState;\r\n\r\nexport const loginReducer = (state: InitialStateLoginType = initialState, action: ActionType): InitialStateLoginType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-LOGIN-DATA\":\r\n            return { ...state, isLoggedIn: action.value }\r\n        case \"LOGIN/SET-DATA\":\r\n            return { ...state, dataLogin: action.data }\r\n        case \"LOGIN/SET-RESPONSE-ERROR\":\r\n            return { ...state, responseError: action.responseError }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setLoginDataAC = (value: boolean) =>\r\n    ({ type: \"LOGIN/SET-LOGIN-DATA\", value } as const)\r\nexport const setDataResponseAC = (data: ResponseType) =>\r\n    ({ type: \"LOGIN/SET-DATA\", data } as const)\r\nexport const setResponseErrorAC = (responseError: string) =>\r\n    ({ type: \"LOGIN/SET-RESPONSE-ERROR\", responseError } as const)\r\n\r\n//Thunks\r\nexport const loginTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    authAPI.login(data)\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setDataResponseAC(res.data))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorAC(error.response.data.error))\r\n        })\r\n}\r\n\r\n\r\n\r\n//Types\r\nexport type ActionType =\r\n    ReturnType<typeof setLoginDataAC>\r\n    | ReturnType<typeof setDataResponseAC>\r\n    | ReturnType<typeof setResponseErrorAC>\r\n\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport { authAPI, RegistrationDataType } from \"../api/cardsApi\";\r\n\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n\tSET_REGISTRATION_DATA = \"SET_REGISTRATION_DATA\",\r\n\tSET_RESPONSE_ERROR = \"SET_RESPONSE_ERROR\"\r\n}\r\n\r\nlet initialState = {\r\n\tisRegistration: false,\r\n\tresponseError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA:\r\n\t\t\treturn { ...state, isRegistration: action.isRegistration }\r\n\t\tcase AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR:\r\n\t\t\treturn { ...state, responseError: action.responseError }\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n}\r\n\r\n// actions\r\n\r\nexport const setRegistrationData = (isRegistration: boolean) => ({ type: AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA, isRegistration } as const)\r\nexport const setResponseError = (responseError: string) => ({ type: AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR, responseError } as const)\r\n\r\n//thunks\r\n\r\nexport const registrationTC = (data: RegistrationDataType) => (dispatch: Dispatch) => {\r\n\tauthAPI.registration(data).then(res => {\r\n\t\tdispatch(setRegistrationData(true))\r\n\t}).catch((error: ErrorDataType) => {\r\n\t\tdispatch(setResponseError(error.response.data.error))\r\n\t})\r\n}\r\n\r\nexport type ActionsType =\r\n\tReturnType<typeof setRegistrationData> |\r\n\tReturnType<typeof setResponseError>\r\n\r\nexport type ErrorDataType = {\r\n\tresponse: {\r\n\t\tdata: ErrorRegistration\r\n\t}\r\n}\r\n\r\nexport type ErrorRegistration = {\r\n\temailRegExp: {},\r\n\terror: string\r\n\tin: string\r\n\tisEmailValid: boolean\r\n\tisPassValid: boolean\r\n\tpasswordRegExp: string\r\n}\r\n","const APP_ACT = \"APP_ACT\";\r\n\r\nexport type ProfileActionsType = ReturnType<typeof addPostActionCreator>\r\n\r\nlet initialState: any = {};\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionsType) => {\r\n    switch (action.type) {\r\n        case APP_ACT:\r\n            return {\r\n                ...state,\r\n            };\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newVariable: string) => {\r\n    return {\r\n        type: APP_ACT,\r\n        newVariable\r\n    } as const\r\n}\r\n\r\n\r\nexport default profileReducer","import { Dispatch } from \"redux\";\r\nimport { authAPI } from \"../api/cardsApi\";\r\nimport { setDataResponseAC, setLoginDataAC } from \"./loginReducer\";\r\nimport { ErrorDataType } from \"./registrationReducer\";\r\n\r\n\r\nexport enum ACTION_TYPES {\r\n\tIS_AUTH = \"IS_AUTH\"\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setIsAuth>\r\n\r\nlet initialState = {\r\n\tisAuth: false\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst authReducer = (state: initialStateType = initialState, action: ProfileActionsType): initialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase ACTION_TYPES.IS_AUTH:\r\n\t\t\treturn {\r\n\t\t\t\t...state, isAuth: action.isAuth\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setIsAuth = (isAuth: boolean) => ({ type: ACTION_TYPES.IS_AUTH, isAuth } as const)\r\n\r\nexport const isAuthTC = () => (dispatch: Dispatch) => {\r\n\tauthAPI.isAuth().then(res => {\r\n\t\tdispatch(setDataResponseAC(res.data))\r\n\t\tdispatch(setLoginDataAC(true))\r\n\t}\r\n\t).catch((error: ErrorDataType) => {\r\n\t\tdispatch(setLoginDataAC(false))\r\n\t})\r\n\r\n\r\n}\r\n\r\n\r\nexport default authReducer;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { loginReducer } from \"./loginReducer\";\r\nimport { passwordRecoveryReducer } from \"./passwordRecoveryReducer\";\r\nimport appReducer from \"./app_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { registrationReducer } from \"./registrationReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    app: appReducer,\r\n    registration: registrationReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    isAuth: authReducer\r\n});\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));","import React, { ChangeEvent, useState } from 'react';\r\nimport style from './Login.module.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppStateType } from \"../../Redux/redux_store\";\r\nimport { loginTC, setResponseErrorAC } from \"../../Redux/loginReducer\";\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [typePassword, setTypePassword] = useState<string>('password')\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n    const responseError = useSelector<AppStateType, string>(state => state.login.responseError)\r\n\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    const setUserData = () => {\r\n        dispatch(loginTC({ email, password, rememberMe }))\r\n    }\r\n    const onSetUpEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpRememberMe = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n    const onClickTypePassword = () => {\r\n        if (typePassword === 'password') {\r\n            setTypePassword('text')\r\n        } else if (typePassword === 'text') {\r\n            setTypePassword('password')\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Sign In\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onSetUpEmail} />\r\n                    </div>\r\n                    <div className={style.formInput}>\r\n                        <input type={typePassword} placeholder='Enter your password' onChange={onSetUpPassword} />\r\n                        <span className={style.photoEye} onClick={onClickTypePassword} />\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <div className={style.forgotPassword}>\r\n                        <input type={\"checkbox\"} checked={rememberMe} onChange={onSetUpRememberMe} />RememberMe\r\n                    </div>\r\n                    <div>\r\n                        <button className={style.loginButton} onClick={setUserData}>Login</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.askAboutAccount}>\r\n                    <span>Don’t have an account?</span>\r\n                </div>\r\n                <div className={style.singUp}>\r\n                    <span>Sign Up</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registrationTC, setResponseError } from '../../Redux/registrationReducer';\r\nimport { AppStateType } from '../../Redux/redux_store';\r\nimport style from './Registartion.module.css';\r\nimport { Redirect } from 'react-router';\r\nimport { PATH } from '../../App';\r\n\r\nconst Registration = () => {\r\n\r\n  const isRegistration = useSelector<AppStateType, boolean>(state => state.registration.isRegistration)\r\n  const responseError = useSelector<AppStateType, string>(state => state.registration.responseError)\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState<string>('')\r\n  const [password, setPassword] = useState<string>('')\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n  const [error, setError] = useState<string>('');\r\n  const [typePassword, setTypePassword] = useState<string>('password')\r\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState<string>('password')\r\n\r\n  const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n  const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n  const onChangeConfirmPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(event.currentTarget.value)\r\n  }\r\n  const onKeyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.charCode === 13) {\r\n      setRegistrationData()\r\n    }\r\n  }\r\n  const onClickTypePassword = () => {\r\n    if (typePassword === 'password') {\r\n      setTypePassword('text')\r\n    } else if (typePassword === 'text') {\r\n      setTypePassword('password')\r\n    }\r\n  }\r\n\r\n  const onClickTypeConfirmPassword = () => {\r\n    if (typeConfirmPassword === 'password') {\r\n      setTypeConfirmPassword('text')\r\n    } else if (typeConfirmPassword === 'text') {\r\n      setTypeConfirmPassword('password')\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const setRegistrationData = () => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n      setError('Неверный логин')\r\n    } /* else if (!/^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8,}$/i.test(password)) {\r\n      setError('Неверный пароль')\r\n    } */ else {\r\n      if (password === confirmPassword) {\r\n        dispatch(registrationTC({ email, password }))\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('')\r\n      } else {\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('Пароль не совпадает')\r\n      }\r\n    }\r\n  }\r\n  const onChangeCancel = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setEmail('')\r\n    setPassword('')\r\n    setConfirmPassword('')\r\n    setError('')\r\n    dispatch(setResponseError(''))\r\n  }\r\n\r\n  if (isRegistration) {\r\n    return <Redirect to={PATH.login} />\r\n  }\r\n  if (isAuth) {\r\n    return <Redirect to={PATH.profile} />\r\n  }\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.mainBlock}>\r\n        <div className={style.title}>\r\n          It-incubator\r\n        </div>\r\n        <div className={style.subTitle}>\r\n          Sign Up\r\n        </div>\r\n        <div className={style.form}>\r\n          <div className={style.formInput}>\r\n            <input type=\"email\" placeholder='Enter your email' value={email} onChange={onChangeEmail} />\r\n          </div>\r\n          <div className={`${style.formInput}`}>\r\n            <input type={typePassword} placeholder='Enter your password' value={password} onChange={onChangePassword} />\r\n            <span className={style.photoEye} onClick={onClickTypePassword} />\r\n          </div>\r\n          <div className={`${style.formInput} ${style.formInputLastChild}`}>\r\n            <input type={typeConfirmPassword} placeholder='Confirm your password' value={confirmPassword} onKeyPress={onKeyPressHandler} onChange={onChangeConfirmPassword} />\r\n            <span className={style.photoEye} onClick={onClickTypeConfirmPassword} />\r\n            <span className={style.formError}>{error ? error : responseError ? responseError : ''}</span>\r\n          </div>\r\n          <div className={style.flexButtons}>\r\n            <div >\r\n              <button className={style.cancelButton} onClick={onChangeCancel}>Cancel</button>\r\n            </div>\r\n            <div>\r\n              <button className={style.logisterButton} onClick={setRegistrationData}>Register</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Registration;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport style from './Profile.module.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../Redux/redux_store\";\r\nimport { isAuthTC } from '../../Redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { PATH } from '../../App';\r\n\r\n\r\ntype dataLoginType = {\r\n  _id: string,\r\n  email: string,\r\n  name: string\r\n  avatar: string | null,\r\n  publicCardPacksCount: number,\r\n  created: string\r\n  updated: string\r\n  isAdmin: boolean\r\n  verified: boolean\r\n  rememberMe: boolean\r\n  error: string\r\n}\r\n\r\nconst Profile = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userData = useSelector<AppStateType, dataLoginType>(state => state.login.dataLogin)\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userData.created) {\r\n      dispatch(isAuthTC());\r\n    }\r\n\r\n  }, [])\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.login} />\r\n  }\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      {JSON.stringify(userData)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport style from './PasswordRecovery.module.css';\r\nimport { passwordRecoveryThunk, setResponseErrorPassword } from \"../../Redux/passwordRecoveryReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../Redux/redux_store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst PasswordRecovery = () => {\r\n    const isRecovered = useSelector<AppStateType, boolean>(state => state.passwordRecovery.isRecovered)\r\n    const responseError = useSelector<AppStateType, string>(state => state.passwordRecovery.responseError)\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [isRedirect, setRedirect] = useState(false)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setResponseErrorPassword(\"\"))\r\n    }\r\n    const onSendEmail = () => {\r\n        const recoveryData = {\r\n            email: email,\r\n            from: 'test-front-admin <ai73a@yandex.by>)',\r\n            message: `<div style=\"background-color: lime; padding: 15px\"> \r\n                        password recovery link: <a href='https://tropicdenis.github.io/friday_project/#/newPassword/$token$''>link</a>\r\n                    </div>`\r\n        };\r\n        dispatch(passwordRecoveryThunk(recoveryData))\r\n    }\r\n\r\n    if (isRecovered) {\r\n        return (<Redirect to={'/newPassword'} />)\r\n    }\r\n\r\n    const onRedirectToLogin = () => {\r\n        setRedirect(true)\r\n    }\r\n    if (isRedirect) {\r\n        return (<Redirect to={'/login'} />)\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Forgot your password?\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onChangeEmail} value={email} />\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <p className={style.textAfterInput}>\r\n                        Enter your email address and we will send you further instructions\r\n                    </p>\r\n                    <div>\r\n                        <button className={style.mainButton} onClick={onSendEmail}>Send Instructions</button>\r\n                    </div>\r\n                </div>\r\n                <div className={style.askAboutAccount} onClick={onRedirectToLogin}>\r\n                    <span>Did you remember your password?</span>\r\n                </div>\r\n                <div className={style.tryLogin} onClick={onRedirectToLogin}>\r\n                    <span>Try logging in</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordRecovery;\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport style from './NewPassword.module.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setNewPasswordTC, setRecoveryFlag } from \"../../Redux/passwordRecoveryReducer\";\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { AppStateType } from '../../Redux/redux_store';\r\nimport { PATH } from '../../App';\r\n\r\nconst NewPassword = () => {\r\n\r\n  const isInfo = useSelector<AppStateType, boolean>(state => state.passwordRecovery.info)\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  dispatch(setRecoveryFlag(false))\r\n\r\n\r\n  const { token } = useParams<{ token: string }>()\r\n  const [newPassword, setNewPassword] = useState('')\r\n\r\n\r\n  const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPassword(e.currentTarget.value);\r\n  }\r\n\r\n  const onChangeNewPasswordAPI = () => {\r\n    dispatch(setNewPasswordTC({ password: newPassword, resetPasswordToken: token }))\r\n  }\r\n\r\n  if (!isInfo) {\r\n    return <Redirect to={PATH.login} />\r\n  }\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.mainBlock}>\r\n        <div className={style.title}>\r\n          It-incubator\r\n        </div>\r\n        <div className={style.subTitle}>\r\n          Forgot your password?\r\n        </div>\r\n        <div className={style.form}>\r\n          <div className={style.formInput}>\r\n            <input type=\"password\" placeholder='Enter your new password' value={newPassword} onChange={onChangeNewPassword} />\r\n            <span className={style.formError}></span>\r\n          </div>\r\n          <p className={style.textAfterInput}>\r\n            Create new password and we will send you further instructions to email\r\n            </p>\r\n          <div>\r\n            <button onClick={onChangeNewPasswordAPI} className={style.mainButton}>Create new password</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewPassword;\r\n","import React from 'react';\r\nimport style from './Component404.module.css';\r\n\r\nconst Component404 = () => {\r\n  return (\r\n    <div className={style.main}>\r\n      Page not found!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Component404;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to={\"/registration\"} activeClassName={s.activeLink}>Registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/login\"} activeClassName={s.activeLink}>Login</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/profile\"} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/passwordRecovery\"} activeClassName={s.activeLink}>PasswordRecovery</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={`/newPassword/`} activeClassName={s.activeLink}>NewPassword</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Navbar","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport style from './App.module.css';\r\nimport Login from \"./components/Login/Login\";\r\nimport Registration from './components/Registration/Registartion';\r\nimport Profile from './components/Profile/Profile';\r\nimport PasswordRecovery from './components/PasswordRecovery/PasswordRecovery';\r\nimport NewPassword from './components/NewPassword/NewPassword';\r\nimport Component404 from \"./components/404/Component404\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    registration: '/registration',\r\n    profile: '/profile',\r\n    Component404: '/404',\r\n    passwordRecovery: '/passwordRecovery',\r\n    newPassword: '/newPassword/:token?'\r\n}\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className={style.app}>\r\n            <div className={style.navBar}> <Navbar /></div>\r\n            <Switch>\r\n                <Route path={PATH.login} render={() => <Login />} />\r\n                <Route path={PATH.registration} render={() => <Registration />} />\r\n                <Route path={PATH.profile} render={() => <Profile />} />\r\n                <Route path={PATH.Component404} render={() => <Component404 />} />\r\n                <Route path={PATH.passwordRecovery} render={() => <PasswordRecovery />} />\r\n                <Route path={PATH.newPassword} render={() => <NewPassword />} />\r\n                <Redirect from={'/'} to={PATH.profile} />\r\n                <Redirect from={'*'} to={\"/404\"} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport {store} from \"./Redux/redux_store\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Registartion_main__2nFAq\",\"mainBlock\":\"Registartion_mainBlock__2ngAa\",\"title\":\"Registartion_title__10gqU\",\"subTitle\":\"Registartion_subTitle__2QVU-\",\"form\":\"Registartion_form__21zcr\",\"formInput\":\"Registartion_formInput__2GrTG\",\"photoEye\":\"Registartion_photoEye__27lRL\",\"formInputLastChild\":\"Registartion_formInputLastChild__2-cEU\",\"formError\":\"Registartion_formError__3hMlL\",\"flexButtons\":\"Registartion_flexButtons__3Df7a\",\"cancelButton\":\"Registartion_cancelButton__jWrpm\",\"logisterButton\":\"Registartion_logisterButton__2yPZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__2tAsx\",\"mainBlock\":\"Login_mainBlock__1G5x2\",\"title\":\"Login_title__lZBdn\",\"subTitle\":\"Login_subTitle__14e7c\",\"form\":\"Login_form__1hhFk\",\"formInput\":\"Login_formInput__16KSn\",\"photoEye\":\"Login_photoEye__wLJWK\",\"forgotPassword\":\"Login_forgotPassword__1fTzC\",\"loginButton\":\"Login_loginButton__1Sccr\",\"askAboutAccount\":\"Login_askAboutAccount__nCJ-J\",\"singUp\":\"Login_singUp__3JpKq\",\"formError\":\"Login_formError__1GuHw\"};"],"sourceRoot":""}