{"version":3,"sources":["Redux/passwordRecoveryReducer.ts","api/cardsApi.ts","Redux/app_reducer.ts","Redux/loginReducer.ts","Redux/registrationReducer.ts","Redux/authReducer.ts","Redux/packsReducer.ts","Redux/cardsReducer.ts","Redux/redux_store.ts","components/Login/Login.tsx","components/Registration/Registartion.tsx","components/LogOut/LogOut.tsx","components/Profile/Profile.tsx","components/PasswordRecovery/PasswordRecovery.tsx","components/NewPassword/NewPassword.tsx","components/404/Component404.tsx","components/Navbar/Navbar.tsx","img/preloader.svg","common/Preloder/preloder.tsx","components/Search/Search.tsx","components/Range/SuperRange.tsx","components/Range/Range.tsx","components/Pack/OnePack/OnePack.tsx","components/Paginator/Paginator.tsx","components/Pack/Packs.tsx","components/Cards/OneCard/OneCard.tsx","components/Cards/Cards.tsx","App.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Registration/Registartion.module.css","components/Login/Login.module.css","components/PasswordRecovery/PasswordRecovery.module.css","components/NewPassword/NewPassword.module.css","components/Cards/Cards.module.css","App.module.css","components/Pack/Packs.module.css","components/Search/Search.module.css","components/Profile/Profile.module.css","components/LogOut/LogOut.module.css","components/404/Component404.module.css","components/Pack/OnePack/OnePack.module.css"],"names":["RECOVERY_ACTIONS_TYPE","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","recoveryData","packsAPI","page","pageCount","get","cardsPack","packsId","put","cardsAPI","cardsPack_id","card","initialState","status","setAppStatusAC","type","isLoggedIn","dataLogin","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","responseError","token","setLoginDataAC","value","setDataResponseAC","setResponseErrorAC","setResponseTokenAC","AUTH_ACTIONS_TYPE","isRecovered","isInfo","setRecoveryFlag","SET_RECOVERY_FlAG","setResponseErrorPassword","SET_RESPONSE_ERROR_PASSWORD","ACTION_TYPES","isRegistration","setResponseError","SET_RESPONSE_ERROR","registrationTC","dispatch","then","res","SET_REGISTRATION_DATA","catch","response","isAuth","authReducer","state","action","IS_AUTH","cardPacks","user_id","cardsCount","cardPacksTotalCount","maxCardsCount","minCardsCount","getCardsPackTC","pageNumber","GET_PACKS_PACK","err","cards","answer","question","grade","shots","cardsTotalCount","maxGrade","minGrade","packUserId","getCardsTC","GET_CARDS","rootReducer","combineReducers","login","app","registration","passwordRecovery","packs","SEARCH_NAME","filter","map","store","createStore","applyMiddleware","thunkMiddleware","Login","useState","setEmail","password","setPassword","setRememberMe","typePassword","setTypePassword","useDispatch","useSelector","to","PATH","profile","className","style","main","mainBlock","title","subTitle","form","formInput","placeholder","onChange","event","currentTarget","photoEye","onClick","formError","forgotPassword","checked","loginButton","askAboutAccount","singUp","Registration","confirmPassword","setConfirmPassword","setError","typeConfirmPassword","setTypeConfirmPassword","setRegistrationData","test","formInputLastChild","onKeyPress","charCode","flexButtons","cancelButton","logisterButton","LogOut","logoutHandler","useCallback","logoutButton","Profile","userData","useEffect","JSON","stringify","PasswordRecovery","isRedirect","setRedirect","onRedirectToLogin","e","textAfterInput","mainButton","passwordRecoveryThunk","from","message","tryLogin","NewPassword","useParams","newPassword","setNewPassword","resetPasswordToken","Component404","Navbar","s","nav","item","active","activeClassName","activeLink","Preloader","src","preloader","alt","Search","inputValue","setInputValue","onSubmit","searchInput","autoFocus","searchButton","SuperRange","onChangeRange","step","min","max","Slider","valueLabelDisplay","aria-labelledby","Range","value1","setValue1","value2","setValue2","Array","isArray","values","OnePack","props","flexCards","onClickDeletePack","packId","onClickUpdatePack","useStyles","makeStyles","theme","root","marginTop","spacing","BasicPagination","classes","count","Math","ceil","Pagination","color","Packs","cardsFromState","cardPage","titlePacks","setTitlePacks","updateCardsPackTC","allPacks","pack","components","flexCardsTitle","createCardsPackTC","OneCard","deleteCard","cardId","updateCard","Cards","allCards","onClickDeleteCard","deleteCardTC","onClickUpdateCard","updateCardTC","table","borderTable","createCardTC","bodyTable","c","App","navBar","preLoader","path","render","ReactDOM","document","getElementById","module","exports"],"mappings":"6HAKYA,E,sCCFNC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,uCAETC,iBAAiB,IAGRC,EAAU,SACNC,GACT,OAAON,EAASO,KAAK,gBAAiBD,IAFjCD,EAAU,SAIbC,GACF,OAAON,EAASO,KAAmB,aAAcD,IAL5CD,EAAU,WAQf,OAAOL,EAASQ,OAAO,UAAW,KAR7BH,EAAU,SAUFI,GACb,OAAOT,EAASO,KAAK,cAAeE,IAX/BJ,EAAU,WAcf,OAAOL,EAASO,KAAK,YAdhBF,EAAU,SAgBJC,GACX,OAAON,EAASO,KAAK,wBAAyBD,IAIzCI,EAAW,WAC+B,IAAtCC,EAAqC,uDAAtB,EAAGC,EAAmB,uCAC9C,OAAOZ,EAASa,IAAT,0BAAgCF,EAAhC,sBAAkDC,EAAlD,yBAFFF,EAAW,SAITI,GACP,OAAOd,EAASO,KAAK,aAAcO,IAL9BJ,EAAW,SAOTK,GACP,OAAOf,EAASQ,OAAT,wBAAiCO,KARnCL,EAAW,SAUTI,GACP,OAAOd,EAASgB,IAAT,aAA2BF,IAI7BG,EAAW,SACPC,GACT,OAAOlB,EAASa,IAAT,kCAAwCK,EAAxC,mBAFFD,EAAW,SAITE,GACP,OAAOnB,EAASO,KAAT,aAA4BY,IAL9BF,EAAW,SAOTC,GACP,OAAOlB,EAASQ,OAAT,wBAAiCU,KARnCD,EAAW,SAUTE,GACP,OAAOnB,EAASgB,IAAT,aAA2BG,ICpDpCC,EAAe,CACjBC,OAAQ,aAgBCC,EAAiB,SAACD,GAC3B,MAAO,CAAEE,KAAM,iBAAkBF,WCjBxBD,EAAe,CACxBI,YAAY,EACZC,UAAW,CACPC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,KACRC,qBAAsB,EACtBC,QAAS,GACTC,QAAS,GACTC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,MAAO,IAEXC,cAAe,GACfC,MAAO,IAqBEC,EAAiB,SAACC,GAAD,MACzB,CAAEjB,KAAM,uBAAwBiB,UACxBC,EAAoB,SAACnC,GAAD,MAC5B,CAAEiB,KAAM,iBAAkBjB,SAClBoC,EAAqB,SAACL,GAAD,MAC7B,CAAEd,KAAM,2BAA4Bc,kBAC5BM,EAAqB,SAACL,GAAD,MAC7B,CAAEf,KAAM,2BAA4Be,W,SH5C7BvC,K,sCAAAA,E,2DAAAA,M,KAKZ,IILY6C,EJKRxB,EAAe,CACfyB,aAAa,EACbR,cAAe,GACfS,QAAQ,GAmBCC,EAAkB,SAACF,GAAD,MAA2B,CACtDtB,KAAMxB,EAAsBiD,kBAAmBH,gBAEtCI,EAA2B,SAACZ,GAAD,MAA4B,CAChEd,KAAMxB,EAAsBmD,4BAA6Bb,kB,kBI/BjDO,K,8CAAAA,E,yCAAAA,M,KAKZ,ICHYO,EDGR/B,EAAe,CAClBgC,gBAAgB,EAChBf,cAAe,IAoBHgB,EAAmB,SAAChB,GAAD,MAA4B,CAAEd,KAAMqB,EAAkBU,mBAAoBjB,kBAI7FkB,EAAiB,SAACjD,GAAD,OAAgC,SAACkD,GAC9DA,EAASlC,EAAe,YACxBjB,EAAqBC,GAAMmD,MAAK,SAAAC,GAPE,IAACN,EAQlCI,GARkCJ,GAQL,EARkC,CAAE7B,KAAMqB,EAAkBe,sBAAuBP,oBAShHI,EAASlC,EAAe,iBACtBsC,OAAM,SAACxB,GACToB,EAASH,EAAiBjB,EAAMyB,SAASvD,KAAK8B,QAC9CoB,EAASlC,EAAe,oB,SCpCd6B,K,mBAAAA,M,KAMZ,ICRYA,EDQR/B,EAAe,CACf0C,QAAQ,GAkCGC,EA7BK,WAA2F,IAA1FC,EAAyF,uDAA/D5C,EAAc6C,EAAiD,uCAC1G,OAAQA,EAAO1C,MACX,KAAK4B,EAAae,QACd,OAAO,2BACAF,GADP,IACcF,OAAQG,EAAOH,SAEjC,QACI,OAAOE,K,SCrBPb,K,gCAAAA,E,2BAAAA,M,KAKZ,ICNYA,EDMN/B,EAAe,CACpB+C,UAAW,CACV,CACCzC,IAAK,GACL0C,QAAS,GACTxC,KAAM,GACNyC,WAAY,EACZtC,QAAS,GACTC,QAAS,KAGXsC,oBAAqB,EACrBC,cAAe,EACfC,cAAe,EACf7D,KAAM,EACNC,UAAW,GAwBC6D,EAAiB,SAACC,GAAD,OAAwB,SAAClB,GACtDA,EAASlC,EAAe,YACxBZ,EAAsBgE,EAAY,IAAIjB,MAAK,SAAAC,GANX,IAACpD,EAOhCkD,GAPgClD,EAOLoD,EAAIpD,KAPkC,CAAEiB,KAAM4B,EAAawB,eAAgBrE,UAQtGkD,EAASlC,EAAe,iBACtBsC,OAAM,SAAAgB,GACRpB,EAASlC,EAAe,oB,SCnDd6B,K,uBAAAA,M,KAGZ,IAAI/B,EAAe,CACfyD,MAAO,CACH,CACIC,OAAQ,GACRC,SAAU,GACV7D,aAAc,GACd8D,MAAO,GACPC,MAAO,EACPb,QAAS,GACTrC,QAAS,GACTC,QAAS,GACTN,IAAK,KAGbwD,gBAAiB,EACjBC,SAAU,EACVC,SAAU,EACVzE,KAAM,EACNC,UAAW,EACXyE,WAAY,IAmBHC,EAAa,SAACpE,GAAD,OAAoC,SAAAsC,GAC1DA,EAASlC,EAAe,YACxBL,EAAsBC,GACjBuC,MAAK,SAAAC,GANY,IAACpD,EAOfkD,GAPelD,EAOKoD,EAAIpD,KAPoB,CAAEiB,KAAM4B,EAAaoC,UAAWjF,UAQ5EkD,EAASlC,EAAe,iBAE3BsC,OAAM,SAAAgB,GACHpB,EAASlC,EAAe,mBCzChCkE,EAAcC,YAAgB,CAC9BC,MLawB,WAAyG,IAAxG1B,EAAuG,uDAAxE5C,EAAc6C,EAA0D,uCAChI,OAAQA,EAAO1C,MACX,IAAK,uBACD,OAAO,2BAAKyC,GAAZ,IAAmBxC,WAAYyC,EAAOzB,QAC1C,IAAK,iBACD,OAAO,2BAAKwB,GAAZ,IAAmBvC,UAAWwC,EAAO3D,OACzC,IAAK,2BACD,OAAO,2BAAK0D,GAAZ,IAAmB3B,cAAe4B,EAAO5B,gBAC7C,IAAK,2BACD,OAAO,2BAAK2B,GAAZ,IAAmB1B,MAAO2B,EAAO3B,QACrC,QACI,OAAO0B,IKvBf2B,INHsB,WAA6F,IAA5F3B,EAA2F,uDAAjE5C,EAAc6C,EAAmD,uCAClH,OAAQA,EAAO1C,MACX,IAAK,iBACD,OAAO,2BAAKyC,GAAZ,IAAmB3C,OAAQ4C,EAAO5C,SACtC,QACI,OAAO2C,IMDf4B,aJE+B,WAAuG,IAAtG5B,EAAqG,uDAA3E5C,EAAc6C,EAA6D,uCAExI,OAAQA,EAAO1C,MACd,KAAKqB,EAAkBe,sBACtB,OAAO,2BAAKK,GAAZ,IAAmBZ,eAAgBa,EAAOb,iBAC3C,KAAKR,EAAkBU,mBACtB,OAAO,2BAAKU,GAAZ,IAAmB3B,cAAe4B,EAAO5B,gBAC1C,QACC,OAAO,eAAK2B,KITX6B,iBREmC,WAA2G,IAA1G7B,EAAyG,uDAA/E5C,EAAc6C,EAAiE,uCAE7I,OAAQA,EAAO1C,MACX,KAAKxB,EAAsBiD,kBACvB,OAAO,2BAAKgB,GAAZ,IAAmBnB,YAAaoB,EAAOpB,cAC3C,KAAK9C,EAAsBmD,4BACvB,OAAO,2BAAKc,GAAZ,IAAmB3B,cAAe4B,EAAO5B,gBAC7C,QACI,OAAO2B,IQTfF,OAAQC,EACR+B,MFawB,WAAsG,IAArG9B,EAAoG,uDAArE5C,EAAc6C,EAAuD,uCAChI,OAAQA,EAAO1C,MACd,KAAK4B,EAAawB,eACjB,OAAOV,EAAO3D,KAGf,KAAK6C,EAAa4C,YACjB,OAAO,2BAAI/B,GAAX,IAAkBG,UAAWH,EAAMG,UAAU6B,QAAO,SAAA7E,GAAI,OAAIA,EAAKS,OAASqC,EAAOrC,UAElF,QACC,OAAOoC,IEtBNa,MDcwB,WAA0F,IAAzFb,EAAwF,uDAA7D5C,EAAc6C,EAA+C,uCACjH,OAAQA,EAAO1C,MACX,KAAK4B,EAAaoC,UACd,OAAO,uCAAKvB,GAAUC,EAAO3D,MAA7B,IAAmCuE,MAAOZ,EAAO3D,KAAKuE,MAAMoB,KAAI,SAAA9E,GAAI,sBAAUA,QAClF,QACI,OAAO6C,MCJNkC,EAAQC,YAAYX,EAAaY,YAAgBC,M,qFC1BjDC,GAAQ,WAAO,IAAD,EACGC,mBAAiB,IADpB,oBAChB5E,EADgB,KACT6E,EADS,OAESD,mBAAiB,IAF1B,oBAEhBE,EAFgB,KAENC,EAFM,OAGaH,oBAAkB,GAH/B,oBAGhBpE,EAHgB,KAGJwE,EAHI,OAIiBJ,mBAAiB,YAJlC,oBAIhBK,EAJgB,KAIFC,EAJE,KAMjBrD,EAAWsD,eACXtF,EAAauF,cAAmC,SAAA/C,GAAK,OAAIA,EAAM0B,MAAMlE,cACrEa,EAAgB0E,cAAkC,SAAA/C,GAAK,OAAIA,EAAM0B,MAAMrD,iBAE7E,GAAIb,EACA,OAAO,eAAC,IAAD,CAAUwF,GAAIC,GAAKC,UAwB9B,OACI,sBAAKC,UAAWC,KAAMC,KAAtB,SACI,uBAAKF,UAAWC,KAAME,UAAtB,UACI,sBAAKH,UAAWC,KAAMG,MAAtB,0BAGA,sBAAKJ,UAAWC,KAAMI,SAAtB,qBAGA,uBAAKL,UAAWC,KAAMK,KAAtB,UACI,sBAAKN,UAAWC,KAAMM,UAAtB,SACI,wBAAOnG,KAAK,QAAQoG,YAAY,mBAAmBC,SA7BlD,SAACC,GAClBrB,EAASqB,EAAMC,cAActF,OAC7BgB,EAASd,EAAmB,UA6BhB,uBAAKyE,UAAWC,KAAMM,UAAtB,UACI,wBAAOnG,KAAMqF,EAAce,YAAY,sBAAsBC,SA5BzD,SAACC,GACrBnB,EAAYmB,EAAMC,cAActF,OAChCgB,EAASd,EAAmB,QA2BZ,uBAAMyE,UAAWC,KAAMW,SAAUC,QAtBzB,WACH,aAAjBpB,EACAC,EAAgB,QACQ,SAAjBD,GACPC,EAAgB,eAmBJ,uBAAMM,UAAWC,KAAMa,UAAvB,SAAmC5F,OAEvC,uBAAK8E,UAAWC,KAAMc,eAAtB,UACI,wBAAO3G,KAAM,WAAY4G,QAAShG,EAAYyF,SA7BxC,SAACC,GACvBlB,EAAckB,EAAMC,cAAcK,YA2BtB,gBAGA,+BACI,yBAAQhB,UAAWC,KAAMgB,YAAaJ,QA3CtC,WN8BD,IAAC1H,EM7BhBkD,GN6BgBlD,EM7BC,CAAEqB,QAAO8E,WAAUtE,cN6BA,SAACqB,GACzCA,EAASlC,EAAe,YACxBjB,EAAcC,GACTmD,MAAK,SAACC,GACHF,EAASjB,GAAe,IACxBiB,EAASf,EAAkBiB,EAAIpD,OAC/BkD,EAASb,EAAmBe,EAAIpD,KAAKgC,QACrCkB,EAASlC,EAAe,iBAE3BsC,OAAM,SAACxB,GACJoB,EAASd,EAAmBN,EAAMyB,SAASvD,KAAK8B,QAChDoB,EAASlC,EAAe,qBMEZ,wBAIR,sBAAK6F,UAAWC,KAAMiB,gBAAtB,SACI,kEAEJ,sBAAKlB,UAAWC,KAAMkB,OAAtB,SACI,oD,oBCgDLC,GAjHM,WACnB,IAAM/E,EAAWsD,eACX1D,EAAiB2D,cAAmC,SAAA/C,GAAK,OAAIA,EAAM4B,aAAaxC,kBAChFf,EAAgB0E,cAAkC,SAAA/C,GAAK,OAAIA,EAAM4B,aAAavD,iBAC9EyB,EAASiD,cAAmC,SAAA/C,GAAK,OAAIA,EAAM0B,MAAMlE,cAJ9C,EAMC+E,mBAAiB,IANlB,oBAMlB5E,EANkB,KAMX6E,EANW,OAOOD,mBAAiB,IAPxB,oBAOlBE,EAPkB,KAORC,EAPQ,OAQqBH,mBAAiB,IARtC,oBAQlBiC,EARkB,KAQDC,EARC,OASClC,mBAAiB,IATlB,oBASlBnE,EATkB,KASXsG,EATW,OAUenC,mBAAiB,YAVhC,oBAUlBK,EAVkB,KAUJC,EAVI,OAW6BN,mBAAiB,YAX9C,oBAWlBoC,EAXkB,KAWGC,EAXH,KA6CnBC,EAAsB,WACrB,4CAA4CC,KAAKnH,GAKhD8E,IAAa+B,GACfhF,EAASD,EAAe,CAAE5B,QAAO8E,cACjCD,EAAS,IACTE,EAAY,IACZ+B,EAAmB,IACnBC,EAAS,MAEThC,EAAY,IACZ+B,EAAmB,IACnBC,EAAS,6GAbXA,EAAS,oFAyBb,OAAItF,EACK,eAAC,IAAD,CAAU4D,GAAIC,GAAKvB,QAExB5B,EACK,eAAC,IAAD,CAAUkD,GAAIC,GAAKC,UAG1B,sBAAKC,UAAWC,KAAMC,KAAtB,SACE,uBAAKF,UAAWC,KAAME,UAAtB,UACE,sBAAKH,UAAWC,KAAMG,MAAtB,0BAGA,sBAAKJ,UAAWC,KAAMI,SAAtB,qBAGA,uBAAKL,UAAWC,KAAMK,KAAtB,UACE,sBAAKN,UAAWC,KAAMM,UAAtB,SACE,wBAAOnG,KAAK,QAAQoG,YAAY,mBAAmBnF,MAAOb,EAAOiG,SA5ErD,SAACC,GACrBrB,EAASqB,EAAMC,cAActF,YA6EvB,uBAAK2E,UAAS,UAAKC,KAAMM,WAAzB,UACE,wBAAOnG,KAAMqF,EAAce,YAAY,sBAAsBnF,MAAOiE,EAAUmB,SA5E/D,SAACC,GACxBnB,EAAYmB,EAAMC,cAActF,UA4ExB,uBAAM2E,UAAWC,KAAMW,SAAUC,QAlEf,WACL,aAAjBpB,EACFC,EAAgB,QACU,SAAjBD,GACTC,EAAgB,kBAgEZ,uBAAKM,UAAS,UAAKC,KAAMM,UAAX,YAAwBN,KAAM2B,oBAA5C,UACE,wBAAOxH,KAAMoH,EAAqBhB,YAAY,wBAAwBnF,MAAOgG,EAAiBQ,WA1E9E,SAACnB,GACF,KAAnBA,EAAMoB,UACRJ,KAwEmIjB,SA7EvG,SAACC,GAC/BY,EAAmBZ,EAAMC,cAActF,UA6E/B,uBAAM2E,UAAWC,KAAMW,SAAUC,QA9DR,WACL,aAAxBW,EACFC,EAAuB,QACU,SAAxBD,GACTC,EAAuB,eA2DjB,uBAAMzB,UAAWC,KAAMa,UAAvB,SAAmC7F,IAAgBC,GAAgC,SAErF,uBAAK8E,UAAWC,KAAM8B,YAAtB,UACE,+BACE,yBAAQ/B,UAAWC,KAAM+B,aAAcnB,QAtC5B,SAACH,GACtBrB,EAAS,IACTE,EAAY,IACZ+B,EAAmB,IACnBC,EAAS,IACTlF,EAASH,EAAiB,MAiChB,sBAEF,+BACE,yBAAQ8D,UAAWC,KAAMgC,eAAgBpB,QAASa,EAAlD,oC,wCC5GDQ,GAAQ,WACjB,IAAM7F,EAAWsD,eACXwC,EAAgBC,uBAAY,WAC9B/F,GR0DsB,SAACA,GAC3BA,EAASlC,EAAe,YACxBjB,IACKoD,MAAK,SAACC,GACHF,EAASjB,GAAe,IACxBiB,EAASlC,EAAe,iBAE3BsC,OAAM,SAACxB,GACJoB,EAASd,EAAmBN,EAAMyB,SAASvD,KAAK8B,QAChDoB,EAASlC,EAAe,sBQlE7B,CAACkC,IAEJ,OAAO,qCACH,yBAAQ2D,UAAWC,KAAMoC,aAAcxB,QAASsB,EAAhD,uBCmBOG,GAtBC,WACZ,IAAMjG,EAAWsD,eACX4C,EAAW3C,cAAyC,SAAA/C,GAAK,OAAIA,EAAM0B,MAAMjE,aACzEqC,EAASiD,cAAmC,SAAA/C,GAAK,OAAIA,EAAM0B,MAAMlE,cAOvE,OALAmI,qBAAU,WACDD,EAAS3H,SACVyB,GPgBkB,SAACA,GAC3BA,EAASlC,EAAe,YACxBjB,IACKoD,MAAK,SAAAC,GACFF,EAASf,EAAkBiB,EAAIpD,OAC/BkD,EAASjB,GAAe,IACxBiB,EAASb,EAAmBe,EAAIpD,KAAKgC,QACrCkB,EAASlC,EAAe,iBAG3BsC,OAAM,SAACxB,GACJoB,EAASjB,GAAe,IACxBiB,EAASlC,EAAe,sBO1B7B,CAACkC,IACCM,EAKD,uBAAKqD,UAAWC,KAAMC,KAAtB,UACI,+BAAMuC,KAAKC,UAAUH,KACrB,kCAAQ,eAAC,GAAD,SANL,eAAC,IAAD,CAAU1C,GAAIC,GAAKvB,S,oBCqDnBoE,GAlEU,WACrB,IAAMjH,EAAckE,cAAmC,SAAA/C,GAAK,OAAIA,EAAM6B,iBAAiBhD,eACjFR,EAAgB0E,cAAkC,SAAA/C,GAAK,OAAIA,EAAM6B,iBAAiBxD,iBAClFmB,EAAWsD,eAHU,EAKDP,mBAAiB,IALhB,oBAKpB5E,EALoB,KAKb6E,EALa,OAMOD,oBAAkB,GANzB,oBAMpBwD,EANoB,KAMRC,EANQ,KAwBrBC,EAAoB,WACtBD,GAAY,IAEhB,OAAInH,EACQ,eAAC,IAAD,CAAUmE,GAAI,iBAEtB+C,EACQ,eAAC,IAAD,CAAU/C,GAAI,WAItB,sBAAKG,UAAWC,KAAMC,KAAtB,SACI,uBAAKF,UAAWC,KAAME,UAAtB,UACI,sBAAKH,UAAWC,KAAMG,MAAtB,0BAGA,sBAAKJ,UAAWC,KAAMI,SAAtB,mCAGA,uBAAKL,UAAWC,KAAMK,KAAtB,UACI,uBAAKN,UAAWC,KAAMM,UAAtB,UACI,wBAAOnG,KAAK,QAAQoG,YAAY,mBAAmBC,SArCjD,SAACsC,GACnB1D,EAAS0D,EAAEpC,cAActF,OACzBgB,EAASP,EAAyB,MAmC0DT,MAAOb,IACnF,uBAAMwF,UAAWC,KAAMa,UAAvB,SAAmC5F,OAEvC,oBAAG8E,UAAWC,KAAM+C,eAApB,gFAGA,+BACI,yBAAQhD,UAAWC,KAAMgD,WAAYpC,QAxCrC,WAQhBxE,Ebc6B,SAAC/C,GAAD,OAA4C,SAAC+C,GAC9EA,EAASlC,EAAe,YACxBjB,EAAyBI,GACpBgD,MAAK,SAAAC,GACFF,EAAST,GAAgB,IACzBS,EAASlC,EAAe,iBAE3BsC,OAAM,SAACxB,GACJoB,EAASP,EAAyBb,EAAMyB,SAASvD,KAAK8B,QACtDoB,EAASlC,EAAe,kBavBnB+I,CAPY,CACjB1I,MAAOA,EACP2I,KAAM,sCACNC,QAAQ,kOAoCI,oCAGR,sBAAKpD,UAAWC,KAAMiB,gBAAiBL,QAASiC,EAAhD,SACI,sEAEJ,sBAAK9C,UAAWC,KAAMoD,SAAUxC,QAASiC,EAAzC,SACI,2D,oBCXLQ,GA/CK,WAElB,IAAM3H,EAASiE,cAAmC,SAAA/C,GAAK,OAAIA,EAAM6B,iBAAiB/C,UAC5EU,EAAWsD,eACjBtD,EAAST,GAAgB,IAJD,IAMhBT,EAAUoI,cAAVpI,MANgB,EAOciE,mBAAS,IAPvB,oBAOjBoE,EAPiB,KAOJC,EAPI,KAiBxB,OAAK9H,EAKH,sBAAKqE,UAAWC,KAAMC,KAAtB,SACE,uBAAKF,UAAWC,KAAME,UAAtB,UACE,sBAAKH,UAAWC,KAAMG,MAAtB,0BAGA,sBAAKJ,UAAWC,KAAMI,SAAtB,mCAGA,uBAAKL,UAAWC,KAAMK,KAAtB,UACE,uBAAKN,UAAWC,KAAMM,UAAtB,UACE,wBAAOnG,KAAK,WAAWoG,YAAY,0BAA0BnF,MAAOmI,EAAa/C,SAvB/D,SAACsC,GAC3BU,EAAeV,EAAEpC,cAActF,UAuBvB,uBAAM2E,UAAWC,KAAMa,eAEzB,oBAAGd,UAAWC,KAAM+C,eAApB,oFAGA,+BACE,yBAAQnC,QA1Ba,WdiCD,IAAC1H,EchC7BkD,GdgC6BlD,EchCH,CAAEmG,SAAUkE,EAAaE,mBAAoBvI,GdgCX,SAACkB,GAC7DA,EAASlC,EAAe,YACxBjB,EAAuBC,GAAMmD,MAAK,SAAAC,GAC9BF,EAASlC,EAAe,iBACzBsC,OAAM,SAAAgB,GACLpB,EAASlC,EAAe,qBcZqB6F,UAAWC,KAAMgD,WAA1D,2CArBD,eAAC,IAAD,CAAUpD,GAAIC,GAAKvB,S,oBCffoF,GARM,WACnB,OACE,sBAAK3D,UAAWC,KAAMC,KAAtB,8B,4BC0BW0D,GA3BA,WACX,OACI,uBAAK5D,UAAW6D,KAAEC,IAAlB,UACI,sBAAK9D,UAAS,UAAK6D,KAAEE,KAAP,YAAeF,KAAEG,QAA/B,SACI,eAAC,KAAD,CAASnE,GAAI,gBAAiBoE,gBAAiBJ,KAAEK,WAAjD,4BAEJ,sBAAKlE,UAAW6D,KAAEE,KAAlB,SACI,eAAC,KAAD,CAASlE,GAAI,SAAUoE,gBAAiBJ,KAAEK,WAA1C,qBAEJ,sBAAKlE,UAAW6D,KAAEE,KAAlB,SACI,eAAC,KAAD,CAASlE,GAAI,WAAYoE,gBAAiBJ,KAAEK,WAA5C,uBAEJ,sBAAKlE,UAAW6D,KAAEE,KAAlB,SACI,eAAC,KAAD,CAASlE,GAAI,oBAAqBoE,gBAAiBJ,KAAEK,WAArD,gCAEJ,sBAAKlE,UAAW6D,KAAEE,KAAlB,SACI,eAAC,KAAD,CAASlE,GAAE,gBAAmBoE,gBAAiBJ,KAAEK,WAAjD,2BAEJ,sBAAKlE,UAAW6D,KAAEE,KAAlB,SACI,eAAC,KAAD,CAASlE,GAAE,SAAYoE,gBAAiBJ,KAAEK,WAA1C,oBAEJ,sBAAKlE,UAAW6D,KAAEE,KAAlB,SACI,eAAC,KAAD,CAASlE,GAAE,WAAcoE,gBAAiBJ,KAAEK,WAA5C,yBC1BD,OAA0B,sCCG5BC,GAAY,WACrB,OAAO,sBAAKC,IAAKC,GAAWC,IAAK,M,wCCCxBC,GAAS,WAClB,IAAMlI,EAAWsD,eADO,EAGYP,mBAAS,IAHrB,oBAGjBoF,EAHiB,KAGLC,EAHK,KASlBC,EAAWtC,uBAAY,WbgCF,IAAC3H,Ea9BpB4B,EADAmI,Gb+BoB/J,Ea9BK+J,Eb8Ba,CAACpK,KAAM4B,EAAa4C,YAAanE,Sa3B/D6C,EAAe,IAE3BmH,EAAc,MAEf,CAACpI,EAAUmI,IAEd,OACI,iCACI,wBAAOxE,UAAWC,KAAM0E,YACjBlE,SAlBE,SAACsC,GACd0B,EAAc1B,EAAEpC,cAActF,QAkBnBA,MAAOmJ,EACPpK,KAAK,OACLoG,YAAY,cACZoE,WAAS,IAEhB,yBAAQxK,KAAK,SACLyG,QAAS6D,EACT1E,UAAWC,KAAM4E,aAFzB,wB,uCCvBCC,GAAkD,SAAC,GAM1D,IAJEzJ,EAIH,EAJGA,MAAO0J,EAIV,EAJUA,cAEPC,GAEH,EAHGC,IAGH,EAHQC,IAGR,EAFGF,MAEH,6DAKD,OAAO,eAACG,GAAA,EAAD,CACK9J,MAAOA,EACPoF,SANe,SAACC,EAAwBrF,GAChD0J,GAAiBA,EAAc1J,IAMvB+J,kBAAkB,OAClBC,kBAAgB,eAChBL,KAAMA,KCvBTM,GAAQ,WAAO,IAAD,EACKlG,mBAAiB,GADtB,oBAChBmG,EADgB,KACRC,EADQ,OAEKpG,mBAAiB,KAFtB,oBAEhBqG,EAFgB,KAERC,EAFQ,KAUvB,OACI,iCACI,eAAC,GAAD,CACIrK,MAAO,CAACkK,EAAQE,GAChBV,cAVU,SAAC1J,GACfsK,MAAMC,QAAQvK,KACdmK,EAAUnK,EAAM,IAChBqK,EAAUrK,EAAM,MAQZ2J,KAAM,IACV,uBAAKhF,UAAWC,KAAM4F,OAAtB,UACI,gCAAON,IACP,gCAAOE,W,oBCPVK,GAAU,SAACC,GACvB,IAAM1J,EAAWsD,eAUjB,OAAO,uBAAKK,UAAWC,KAAM+F,UAAtB,UACN,+BAAMD,EAAMtL,OACZ,+BAAMsL,EAAM7I,aACZ,+BAAM6I,EAAMlL,UACZ,+BAAK,yBAAQgG,QAZoB,SAACH,GAClCqF,EAAME,kBAAkBF,EAAMG,SAWzB,sBACL,+BAAK,yBAAQrF,QAToB,SAACH,GAClCqF,EAAMI,kBAAkBJ,EAAMG,SAQzB,sBACL,+BAAK,eAAC,KAAD,CAASrG,GAAE,iBAAYkG,EAAMG,QAAUrF,QAAS,WACpDxE,EAAS8B,EAAW4H,EAAMG,UADtB,yB,oBC5BDE,GAAYC,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF,QAAS,CACLC,UAAWF,EAAMG,QAAQ,SAW9B,SAASC,GAAgBX,GAC5B,IAAMY,EAAUP,KACVQ,EAAQC,KAAKC,KAAKf,EAAM5I,oBAAoB,IAElD,OACI,sBAAK6C,UAAW2G,EAAQJ,KAAxB,SACI,eAACQ,GAAA,EAAD,CAAYH,MAAOA,EACPI,MAAM,YACNxN,KAAMuM,EAAMvM,KACZiH,SAAUsF,EAAMtF,aCXxC,IAyEewG,GAzED,WACV,IAAM5K,EAAWsD,eACXuH,EAAiBtH,cAAiD,SAAA/C,GAAK,OAAIA,EAAM8B,SACjFxB,EAAsByC,cAAmC,SAAA/C,GAAK,OAAIA,EAAM8B,MAAMxB,uBAC9EgK,EAAWvH,cAAmC,SAAA/C,GAAK,OAAIA,EAAM8B,MAAMnF,QAJzD,EAKoB4F,mBAAS,IAL7B,oBAKTgI,EALS,KAKGC,EALH,KAOhB7E,qBAAU,WACNnG,EAASiB,EAAe6J,MACzB,CAAC9K,IAGJ,IAIM1C,EAAY,CACdc,KAAM2M,GAOJnB,EAAoB7D,uBAAY,SAAC8D,GlB6BV,IAACtM,EAAiBJ,EkB5B3C6C,GlB4B0BzC,EkB5BCsM,ElB4BgB1M,EkB5BR2N,ElB4BmC,SAAA9K,GAC7EA,EAASlC,EAAe,YACxBZ,EAAoBK,GAAS0C,MAAK,SAAAC,GACjCF,EAASiB,EAAe9D,IACxB6C,EAASlC,EAAe,iBACtBsC,OAAM,SAAAgB,GACRpB,EAASlC,EAAe,sBkBjCnB,CAAC+M,IAEEf,EAAoB/D,uBAAY,SAAC8D,GACnC7J,ElBiCyB,SAAC1C,EAAgCH,GAAjC,OAA4D,SAAA6C,GAC5FA,EAASlC,EAAe,YACxBZ,EAAoBI,GAAW2C,MAAK,SAAAC,GACnCF,EAASiB,EAAe9D,IACxB6C,EAASlC,EAAe,iBACtBsC,OAAM,SAAAgB,GACRpB,EAASlC,EAAe,kBkBvCTmN,CAAkB,CACvB3N,UAAW,CACPY,IAAK2L,EACLzL,KAAM,aAEX0M,MACJ,CAACD,IAMEK,EAAWL,EAAelK,UAAU8B,KAAI,SAAA0I,GAAI,OAAI,eAAC,GAAD,CAClDtB,OAAQsB,EAAKjN,IACbE,KAAM+M,EAAK/M,KACXyC,WAAYsK,EAAKtK,WACjBrC,QAAS2M,EAAK3M,QACdoL,kBAAmBA,EACnBE,kBAAmBA,OAIvB,OACI,uBAAKnG,UAAWC,KAAMC,KAAtB,UACI,uBAAKF,UAAWC,KAAMwH,WAAtB,UACI,eAAC,GAAD,IACA,eAAC,GAAD,OAEJ,6CACA,uBAAKzH,UAAWC,KAAMyH,eAAtB,UACI,wCACA,8CACA,2CACA,+BAAK,wBAAOtN,KAAK,OAAOiB,MAAO+L,EAAY3G,SAlDzB,SAACC,GAC3B2G,EAAc3G,EAAMC,cAActF,YAkD1B,+BACI,yBAAQwF,QA5CO,SAACH,GAC5BrE,ElBsByB,SAAC1C,EAAgCH,GAAjC,OAA4D,SAAA6C,GAC5FA,EAASlC,EAAe,YACxBZ,EAAoBI,GAAW2C,MAAK,SAAAC,GACnCF,EAASiB,EAAe9D,IACxB6C,EAASlC,EAAe,iBACtBsC,OAAM,SAAAgB,GACRpB,EAASlC,EAAe,kBkB5BTwN,CAAkB,CAAEhO,aAAawN,IAC1CE,EAAc,KA0CF,sBAGR,+BAAME,IACN,eAACb,GAAD,CAAiBlN,KAAM2N,EAAUhK,oBAAqBA,EAAqBsD,SA/BvD,SAACC,EAAmClH,GAC5D6C,EAASiB,EAAe9D,WC5CnBoO,GAAU,SAAC7B,GASvB,OAAQ,iCACP,kCAAOA,EAAMnL,QAASmL,EAAMnI,YAC5B,yBAAQiD,QATa,WACrBkF,EAAM8B,WAAW9B,EAAM+B,SAQvB,oBACA,yBAAQjH,QAPa,WACrBkF,EAAMgC,WAAWhC,EAAM+B,SAMvB,wBCZWE,GAAQ,WACjB,IAAM3L,EAAWsD,eACXsI,EAAWrI,cAA6C,SAAA/C,GAAK,OAAIA,EAAMa,SAEtE3D,EAAgBwJ,cAAhBxJ,aAEPyI,qBAAU,WACNnG,EAAS8B,EAAWpE,MACrB,CAACsC,EAAUtC,IAEd,IAQMmO,EAAoB,SAACJ,GACvBzL,EnBsCoB,SAACyL,EAAgB/N,GAAjB,OAAoD,SAAAsC,GAC5EA,EAASlC,EAAe,YACxBL,EAAoBgO,GACfxL,MAAK,SAAAC,GACFF,EAAS8B,EAAWpE,IACpBsC,EAASlC,EAAe,iBAE3BsC,OAAM,SAAAgB,GACHpB,EAASlC,EAAe,kBmB9CnBgO,CAAaL,EAAQ/N,KAE5BqO,EAAoB,SAACN,GACvBzL,EnB8CoB,SAACrC,EAAsBD,GAAvB,OAA0D,SAAAsC,GAClFA,EAASlC,EAAe,YACxBL,EAAoBE,GACfsC,MAAK,SAAAC,GACFF,EAAS8B,EAAWpE,IACpBsC,EAASlC,EAAe,iBAE3BsC,OAAM,SAAAgB,GACHpB,EAASlC,EAAe,kBmBtDnBkO,CAAa,CAClBrO,KAAM,CACFO,IAAKuN,EACLlK,SAAU,iBAEf7D,KAGP,OACI,uBAAKiG,UAAWC,KAAMC,KAAtB,UACI,uBAAKF,UAAWC,KAAMwH,WAAtB,UACI,eAAC,GAAD,IACA,eAAC,GAAD,OAEJ,uBAAKzH,UAAWC,KAAMqI,MAAtB,wBACI,uBAAKtI,UAAWC,KAAMsI,YAAtB,UACI,6CACA,2CACA,0CACA,4CACA,wCACA,yBAAQ1H,QAjCE,SAACkC,GACvB1G,EnBmCoB,SAACrC,EAAgBD,GAAjB,OAAoD,SAAAsC,GAC5EA,EAASlC,EAAe,YACxBL,EAAoBE,GACfsC,MAAK,SAAAC,GACFF,EAAS8B,EAAWpE,IACpBsC,EAASlC,EAAe,iBAE3BsC,OAAM,SAAAgB,GACHpB,EAASlC,EAAe,kBmB3CnBqO,CAAa,CAClBxO,KAAM,CACFD,iBAELA,KA4BS,uBAIR,sBAAKiG,UAAWC,KAAMwI,UAAtB,SACI,sBAAKzI,UAAWC,KAAMsI,YAAtB,SACKN,EAASvK,MAAMoB,KAAI,SAAA4J,GAAC,OAAK,eAAC,GAAD,CAClBZ,OAAQY,EAAEnO,IACVqD,SAAU8K,EAAE9K,SACZhD,QAAS8N,EAAE9N,QACXiN,WAAYK,EACZH,WAAYK,eChD3BtI,GAAO,CAChBvB,MAAO,SACPE,aAAc,gBACdsB,QAAS,WACT4D,aAAc,OACdjF,iBAAkB,oBAClB8E,YAAa,uBACbgE,KAAM,QACN9J,MAAO,yBAGEiL,GAAM,WAEf,IAAMzO,EAAS0F,cAAkC,SAAA/C,GAAK,OAAIA,EAAM2B,IAAItE,UAEpE,OACI,uBAAK8F,UAAWC,IAAMzB,IAAtB,UACI,sBAAKwB,UAAWC,IAAM2I,OAAtB,SAA8B,eAAC,GAAD,MAClB,YAAX1O,GAAwB,sBAAK8F,UAAWC,IAAM4I,UAAtB,SAAiC,eAAC,GAAD,MAC1D,gBAAC,IAAD,WACI,eAAC,IAAD,CAAOC,KAAMhJ,GAAKvB,MAAOwK,OAAQ,kBAAM,eAAC,GAAD,OACvC,eAAC,IAAD,CAAOD,KAAMhJ,GAAKrB,aAAcsK,OAAQ,kBAAM,eAAC,GAAD,OAC9C,eAAC,IAAD,CAAOD,KAAMhJ,GAAKC,QAASgJ,OAAQ,kBAAM,eAAC,GAAD,OACzC,eAAC,IAAD,CAAOD,KAAMhJ,GAAK6D,aAAcoF,OAAQ,kBAAM,eAAC,GAAD,OAC9C,eAAC,IAAD,CAAOD,KAAMhJ,GAAKpB,iBAAkBqK,OAAQ,kBAAM,eAAC,GAAD,OAClD,eAAC,IAAD,CAAOD,KAAMhJ,GAAK0D,YAAauF,OAAQ,kBAAM,eAAC,GAAD,OAC7C,eAAC,IAAD,CAAOD,KAAMhJ,GAAK0H,KAAMuB,OAAQ,kBAAM,eAAC,GAAD,OACtC,eAAC,IAAD,CAAOD,KAAMhJ,GAAKpC,MAAOqL,OAAQ,kBAAM,eAAC,GAAD,OACvC,eAAC,IAAD,CAAU5F,KAAM,IAAKtD,GAAIC,GAAKC,UAC9B,eAAC,IAAD,CAAUoD,KAAM,IAAKtD,GAAI,gBCpCzCmJ,IAASD,OACL,eAAC,KAAD,CAAUhK,MAAOA,EAAjB,SACI,eAAC,KAAD,UACI,eAAC,GAAD,QAEIkK,SAASC,eAAe,U,mBCbxCC,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,mBCArFD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,gCAAgC,MAAQ,4BAA4B,SAAW,+BAA+B,KAAO,2BAA2B,UAAY,gCAAgC,SAAW,+BAA+B,mBAAqB,yCAAyC,UAAY,gCAAgC,YAAc,kCAAkC,aAAe,mCAAmC,eAAiB,uC,mBCAngBD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,UAAY,yBAAyB,MAAQ,qBAAqB,SAAW,wBAAwB,KAAO,oBAAoB,UAAY,yBAAyB,SAAW,wBAAwB,eAAiB,8BAA8B,YAAc,2BAA2B,gBAAkB,+BAA+B,OAAS,sBAAsB,UAAY,2B,mBCAzaD,EAAOC,QAAU,CAAC,KAAO,+BAA+B,UAAY,oCAAoC,MAAQ,gCAAgC,SAAW,mCAAmC,KAAO,+BAA+B,UAAY,oCAAoC,eAAiB,yCAAyC,WAAa,qCAAqC,gBAAkB,0CAA0C,SAAW,mCAAmC,UAAY,sC,mBCAtfD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,MAAQ,2BAA2B,SAAW,8BAA8B,KAAO,0BAA0B,UAAY,+BAA+B,eAAiB,oCAAoC,WAAa,gCAAgC,gBAAkB,qCAAqC,SAAW,8BAA8B,UAAY,iC,mBCApcD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,WAAa,0BAA0B,OAAS,sBAAsB,MAAQ,qBAAqB,YAAc,2BAA2B,UAAY,yBAAyB,UAAY,2B,mBCAzQD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,UAAY,yB,mBCAlFD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,UAAY,yBAAyB,eAAiB,8BAA8B,WAAa,4B,mBCA9ID,EAAOC,QAAU,CAAC,aAAe,6BAA6B,YAAc,8B,wCCA5ED,EAAOC,QAAU,CAAC,KAAO,wB,mBCAzBD,EAAOC,QAAU,CAAC,aAAe,+B,mBCAjCD,EAAOC,QAAU,CAAC,KAAO,6B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,UAAY,2BAA2B,eAAiB,mC","file":"static/js/main.c3972cd0.chunk.js","sourcesContent":["import { Dispatch } from \"redux\";\r\nimport { authAPI, PasswordRecoveryDataType } from \"../api/cardsApi\";\r\nimport { ErrorDataType } from \"./registrationReducer\";\r\nimport { setAppStatusAC } from \"./app_reducer\";\r\n\r\nexport enum RECOVERY_ACTIONS_TYPE {\r\n    SET_RECOVERY_FlAG = \"SET_RECOVERY_FlAG\",\r\n    SET_RESPONSE_ERROR_PASSWORD = \"SET_RESPONSE_ERROR_PASSWORD\"\r\n}\r\n\r\nlet initialState = {\r\n    isRecovered: false,\r\n    responseError: '',\r\n    isInfo: true\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: PasswordRecoveryReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FlAG:\r\n            return { ...state, isRecovered: action.isRecovered }\r\n        case RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR_PASSWORD:\r\n            return { ...state, responseError: action.responseError }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setRecoveryFlag = (isRecovered: boolean) => ({\r\n    type: RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FlAG, isRecovered\r\n} as const)\r\nexport const setResponseErrorPassword = (responseError: string) => ({\r\n    type: RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR_PASSWORD, responseError\r\n} as const)\r\n\r\n//thunks\r\n\r\nexport const passwordRecoveryThunk = (recoveryData: PasswordRecoveryDataType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.passwordRecovery(recoveryData)\r\n        .then(res => {\r\n            dispatch(setRecoveryFlag(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorPassword(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const setNewPasswordTC = (data: setNewPasswordTCType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.setNewPassword(data).then(res => {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    }).catch(err => {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    })\r\n}\r\n\r\nexport type setNewPasswordTCType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nexport type PasswordRecoveryReducerActionsType =\r\n    ReturnType<typeof setRecoveryFlag>\r\n    | ReturnType<typeof setResponseErrorPassword>\r\n\r\n\r\n","import axios from 'axios'\r\nimport { setNewPasswordTCType } from '../Redux/passwordRecoveryReducer'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    //baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    registration(data: RegistrationDataType) {\r\n        return instance.post('auth/register', data)\r\n    },\r\n    login(data: LoginType) {\r\n        return instance.post<ResponseType>(\"auth/login\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me', {})\r\n    },\r\n    passwordRecovery(recoveryData: PasswordRecoveryDataType) {\r\n        return instance.post('auth/forgot', recoveryData)\r\n    },\r\n    isAuth() {\r\n        return instance.post('auth/me')\r\n    },\r\n    setNewPassword(data: setNewPasswordTCType) {\r\n        return instance.post('auth/set-new-password', data)\r\n    }\r\n}\r\n//min=${min}&max=${max}&\r\nexport const packsAPI = {\r\n    getCardsPack(page: number = 2, pageCount: number) {\r\n        return instance.get(`cards/pack?page=${page}&pageCount=${pageCount}&sortPacks=0updated`)\r\n    },\r\n    createPack(cardsPack: CardsPackCreateType) {\r\n        return instance.post('cards/pack', cardsPack);\r\n    },\r\n    deletePack(packsId: string) {\r\n        return instance.delete(`cards/pack?id=${packsId}`)\r\n    },\r\n    updatePack(cardsPack: CardsPackUpdateType) {\r\n        return instance.put(`cards/pack`, cardsPack)\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCardsPack(cardsPack_id: string) {\r\n        return instance.get(`cards/card?cardsPack_id=${cardsPack_id}&pageCount=20`)\r\n    },\r\n    createCard(card: CardType) {\r\n        return instance.post(`cards/card`, card)\r\n    },\r\n    deleteCard(cardsPack_id: string) {\r\n        return instance.delete(`cards/card?id=${cardsPack_id}`)\r\n    },\r\n    updateCard(card: UpdateCardType) {\r\n        return instance.put(`cards/card`, card)\r\n    },\r\n}\r\n\r\n//Types\r\nexport type LoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe?: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string | null\r\n    publicCardPacksCount: number\r\n    created: string;\r\n    updated: string;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error: string;\r\n    token: string\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type PasswordRecoveryDataType = {\r\n    email: string,\r\n    from: string,\r\n    message: string\r\n}\r\nexport type CardType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string // если не отправить будет таким\t\r\n        answer?: string // если не отправить будет таким\t\r\n        grade?: number // 0..5, не обязателен\t\r\n        shots?: number // не обязателен\t\r\n        rating?: number // не обязателен\t\r\n        answerImg?: string // не обязателен\t\r\n        questionImg?: string // не обязателен\t\r\n        questionVideo?: string // не обязателен\t\r\n        answerVideo?: string // не обязателен\t\r\n        type?: string // если не отправить будет таким\t\r\n    }\r\n}\r\nexport type UpdateCardType = {\r\n    card: {\r\n        answer?: string,\r\n        question?: string,\r\n        cardsPack_id?: string,\r\n        grade?: string,\r\n        shots?: number,\r\n        user_id?: string,\r\n        created?: string,\r\n        updated?: string,\r\n        _id: string\r\n    }\r\n}\r\nexport type CardsPackCreateType = {\r\n    cardsPack: {\r\n        name?: string // если не отправить будет таким\t\r\n        path?: string // если не отправить будет такой\t\r\n        grade?: number // не обязателен\t\r\n        shots?: number // не обязателен\t\r\n        rating?: number // не обязателен\t\r\n        deckCover?: string // не обязателен\t\r\n        private?: false // если не отправить будет такой\t\r\n        type?: string // если не отправить будет таким\t\r\n    }\r\n}\r\nexport type CardsPackUpdateType = {\r\n    cardsPack: {\r\n        _id: string\r\n        user_id?: string\r\n        name?: string\r\n        path?: string // папка\t\t\r\n        cardsCount?: number\r\n        grade?: number // средняя оценка карточек\t\t\r\n        shots?: number // количество попыток\t\t\r\n        rating?: number // лайки\t\t\r\n        type?: string // ещё будет \"folder\" (папка)\t\t\r\n        created?: string\r\n        updated?: string\r\n        __v?: number\r\n    }\r\n}","\r\n//Types\r\nexport type RequestStatusType = 'loading' | 'succeeded'\r\n\r\nconst initialState = {\r\n    status: 'succeeded' as RequestStatusType\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type AppReducerActionType = ReturnType<typeof setAppStatusAC>\r\n\r\n//Reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppReducerActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return { ...state, status: action.status };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n    return { type: 'APP/SET-STATUS', status } as const\r\n}\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport { authAPI, LoginType, ResponseType } from \"../api/cardsApi\";\r\nimport { setAppStatusAC } from \"./app_reducer\";\r\nimport { ErrorDataType } from \"./registrationReducer\";\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    dataLogin: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: 0,\r\n        created: \"\",\r\n        updated: \"\",\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: \"\",\r\n    },\r\n    responseError: \"\",\r\n    token: ''\r\n}\r\n\r\nexport type InitialStateLoginType = typeof initialState;\r\n\r\nexport const loginReducer = (state: InitialStateLoginType = initialState, action: LoginReducerActionType): InitialStateLoginType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-LOGIN-DATA\":\r\n            return { ...state, isLoggedIn: action.value }\r\n        case \"LOGIN/SET-DATA\":\r\n            return { ...state, dataLogin: action.data }\r\n        case \"LOGIN/SET-RESPONSE-ERROR\":\r\n            return { ...state, responseError: action.responseError }\r\n        case 'LOGIN/SET-RESPONSE-TOKEN':\r\n            return { ...state, token: action.token }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setLoginDataAC = (value: boolean) =>\r\n    ({ type: \"LOGIN/SET-LOGIN-DATA\", value } as const)\r\nexport const setDataResponseAC = (data: ResponseType) =>\r\n    ({ type: \"LOGIN/SET-DATA\", data } as const)\r\nexport const setResponseErrorAC = (responseError: string) =>\r\n    ({ type: \"LOGIN/SET-RESPONSE-ERROR\", responseError } as const)\r\nexport const setResponseTokenAC = (token: string) =>\r\n    ({ type: \"LOGIN/SET-RESPONSE-TOKEN\", token } as const)\r\n\r\n//Thunks\r\nexport const loginTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.login(data)\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setDataResponseAC(res.data))\r\n            dispatch(setResponseTokenAC(res.data.token))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorAC(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.logout()\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(false))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorAC(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n//Types\r\nexport type LoginReducerActionType =\r\n    ReturnType<typeof setLoginDataAC>\r\n    | ReturnType<typeof setDataResponseAC>\r\n    | ReturnType<typeof setResponseErrorAC>\r\n    | ReturnType<typeof setResponseTokenAC>\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport { authAPI, RegistrationDataType } from \"../api/cardsApi\";\r\nimport { setAppStatusAC } from \"./app_reducer\";\r\n\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n\tSET_REGISTRATION_DATA = \"SET_REGISTRATION_DATA\",\r\n\tSET_RESPONSE_ERROR = \"SET_RESPONSE_ERROR\"\r\n}\r\n\r\nlet initialState = {\r\n\tisRegistration: false,\r\n\tresponseError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: RegistrationReducerActionsType): InitialStateType => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA:\r\n\t\t\treturn { ...state, isRegistration: action.isRegistration }\r\n\t\tcase AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR:\r\n\t\t\treturn { ...state, responseError: action.responseError }\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n}\r\n\r\n// actions\r\n\r\nexport const setRegistrationData = (isRegistration: boolean) => ({ type: AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA, isRegistration } as const)\r\nexport const setResponseError = (responseError: string) => ({ type: AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR, responseError } as const)\r\n\r\n//thunks\r\n\r\nexport const registrationTC = (data: RegistrationDataType) => (dispatch: Dispatch) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tauthAPI.registration(data).then(res => {\r\n\t\tdispatch(setRegistrationData(true))\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t}).catch((error: ErrorDataType) => {\r\n\t\tdispatch(setResponseError(error.response.data.error))\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t})\r\n}\r\n\r\nexport type RegistrationReducerActionsType =\r\n\tReturnType<typeof setRegistrationData> |\r\n\tReturnType<typeof setResponseError>\r\n\r\nexport type ErrorDataType = {\r\n\tresponse: {\r\n\t\tdata: ErrorRegistration\r\n\t}\r\n}\r\n\r\nexport type ErrorRegistration = {\r\n\temailRegExp: {},\r\n\terror: string\r\n\tin: string\r\n\tisEmailValid: boolean\r\n\tisPassValid: boolean\r\n\tpasswordRegExp: string\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { authAPI } from \"../api/cardsApi\";\r\nimport { setAppStatusAC } from \"./app_reducer\";\r\nimport { setDataResponseAC, setLoginDataAC, setResponseTokenAC } from \"./loginReducer\";\r\nimport { ErrorDataType } from \"./registrationReducer\";\r\n\r\n\r\nexport enum ACTION_TYPES {\r\n    IS_AUTH = \"IS_AUTH\"\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setIsAuth>\r\n\r\nlet initialState = {\r\n    isAuth: false\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst authReducer = (state: initialStateType = initialState, action: ProfileActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.IS_AUTH:\r\n            return {\r\n                ...state, isAuth: action.isAuth\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsAuth = (isAuth: boolean) => ({ type: ACTION_TYPES.IS_AUTH, isAuth } as const)\r\n\r\nexport const isAuthTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.isAuth()\r\n        .then(res => {\r\n            dispatch(setDataResponseAC(res.data))\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setResponseTokenAC(res.data.token))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        }\r\n        )\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setLoginDataAC(false))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport default authReducer;","import { Dispatch } from '@reduxjs/toolkit';\r\nimport { CardsPackCreateType, CardsPackUpdateType, packsAPI } from '../api/cardsApi';\r\nimport { setAppStatusAC } from './app_reducer';\r\nimport { AppThunk } from './redux_store';\r\n\r\nexport enum ACTION_TYPES {\r\n\tGET_PACKS_PACK = 'GET_PACKS_PACK',\r\n\tSEARCH_NAME = \"SEARCH_NAME\"\r\n}\r\n\r\nconst initialState = {\r\n\tcardPacks: [\r\n\t\t{\r\n\t\t\t_id: '',\r\n\t\t\tuser_id: '',\r\n\t\t\tname: '',\r\n\t\t\tcardsCount: 0,\r\n\t\t\tcreated: '',\r\n\t\t\tupdated: ''\r\n\t\t}\r\n\t],\r\n\tcardPacksTotalCount: 0,\r\n\tmaxCardsCount: 0,\r\n\tminCardsCount: 0,\r\n\tpage: 1,\r\n\tpageCount: 0\r\n}\r\n\r\nexport type initialCardsStateType = typeof initialState;\r\n\r\n//Reducer\r\nexport const packsReducer = (state: initialCardsStateType = initialState, action: CardsPackActionType): initialCardsStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase ACTION_TYPES.GET_PACKS_PACK:\r\n\t\t\treturn action.data\r\n\t\t\t\t/*...state, ...action.data, cardPacks: action.data.cardPacks.map(pack => ({ ...pack }))*/\r\n\r\n\t\tcase ACTION_TYPES.SEARCH_NAME: {\r\n\t\t\treturn {...state, cardPacks: state.cardPacks.filter(card => card.name === action.name)}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n//Action\r\nexport const getAllCardsPackAC = (data: initialCardsStateType) => ({ type: ACTION_TYPES.GET_PACKS_PACK, data }as const)\r\nexport const setSearchNameAC = (name: string) => ({type: ACTION_TYPES.SEARCH_NAME, name}as const)\r\n\r\n//Thunk\r\nexport const getCardsPackTC = (pageNumber: number) => (dispatch: Dispatch) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tpacksAPI.getCardsPack(pageNumber, 10).then(res => {\r\n\t\tdispatch(getAllCardsPackAC(res.data))\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t}).catch(err => {\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t})\r\n}\r\n\r\nexport const createCardsPackTC = (cardsPack: CardsPackCreateType, page: number): AppThunk => dispatch => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tpacksAPI.createPack(cardsPack).then(res => {\r\n\t\tdispatch(getCardsPackTC(page))\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t}).catch(err => {\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t})\r\n}\r\n\r\nexport const deleteCardsPackTC = (packsId: string, page: number): AppThunk => dispatch => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tpacksAPI.deletePack(packsId).then(res => {\r\n\t\tdispatch(getCardsPackTC(page))\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t}).catch(err => {\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t})\r\n}\r\nexport const updateCardsPackTC = (cardsPack: CardsPackUpdateType, page: number): AppThunk => dispatch => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tpacksAPI.updatePack(cardsPack).then(res => {\r\n\t\tdispatch(getCardsPackTC(page))\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t}).catch(err => {\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t})\r\n}\r\n\r\nexport type CardsPackActionType =\r\n\tReturnType<typeof getAllCardsPackAC>\r\n\t| ReturnType<typeof setSearchNameAC>\r\n","import {setAppStatusAC} from \"./app_reducer\";\r\nimport {cardsAPI, CardType, UpdateCardType} from \"../api/cardsApi\";\r\nimport {AppThunk} from \"./redux_store\";\r\n\r\nexport enum ACTION_TYPES {\r\n    GET_CARDS = \"GET_CARDS\"\r\n}\r\nlet initialState = {\r\n    cards: [\r\n        {\r\n            answer: \"\",\r\n            question: \"\",\r\n            cardsPack_id: \"\",\r\n            grade: \"\",\r\n            shots: 1,\r\n            user_id: \"\",\r\n            created: \"\",\r\n            updated: \"\",\r\n            _id: \"\"\r\n        }\r\n    ],\r\n    cardsTotalCount: 0,\r\n    maxGrade: 0,\r\n    minGrade: 0,\r\n    page: 0,\r\n    pageCount: 0,\r\n    packUserId: \"\"\r\n}\r\n\r\nexport type InitialStateCards = typeof initialState\r\nexport type CardsActionType = ReturnType<typeof getCardsAC>\r\n\r\n//Reducer\r\nexport const cardsReducer = (state: InitialStateCards = initialState, action: CardsActionType): InitialStateCards => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.GET_CARDS:\r\n            return { ...state, ...action.data, cards: action.data.cards.map(card => ({ ...card })) }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Action\r\nexport const getCardsAC = (data: InitialStateCards) => ({ type: ACTION_TYPES.GET_CARDS, data })\r\n\r\n//Thunk\r\nexport const getCardsTC = (cardsPack_id: string): AppThunk => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.getCardsPack(cardsPack_id)\r\n        .then(res => {\r\n            dispatch(getCardsAC(res.data))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const createCardTC = (card: CardType, cardsPack_id: string): AppThunk => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.createCard(card)\r\n        .then(res => {\r\n            dispatch(getCardsTC(cardsPack_id))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const deleteCardTC = (cardId: string, cardsPack_id: string): AppThunk => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.deleteCard(cardId)\r\n        .then(res => {\r\n            dispatch(getCardsTC(cardsPack_id))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const updateCardTC = (card: UpdateCardType, cardsPack_id: string): AppThunk => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.updateCard(card)\r\n        .then(res => {\r\n            dispatch(getCardsTC(cardsPack_id))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer, LoginReducerActionType} from \"./loginReducer\";\r\nimport {passwordRecoveryReducer, PasswordRecoveryReducerActionsType} from \"./passwordRecoveryReducer\";\r\nimport {appReducer, AppReducerActionType} from \"./app_reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {registrationReducer, RegistrationReducerActionsType} from \"./registrationReducer\";\r\nimport authReducer, {ProfileActionsType} from \"./authReducer\";\r\nimport {CardsPackActionType, packsReducer} from \"./packsReducer\";\r\nimport {CardsActionType, cardsReducer} from \"./cardsReducer\";\r\nimport {SearchActionType} from \"../components/Search/searchReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    app: appReducer,\r\n    registration: registrationReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    isAuth: authReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\n\r\ntype AppActionType = AppReducerActionType\r\n    | ProfileActionsType\r\n    | CardsPackActionType\r\n    | LoginReducerActionType\r\n    | PasswordRecoveryReducerActionsType\r\n    | RegistrationReducerActionsType\r\n    | CardsActionType\r\n    | SearchActionType\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppThunk = ThunkAction<void, AppStateType, unknown, AppActionType>","import React, { ChangeEvent, useState } from 'react';\r\nimport style from './Login.module.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppStateType } from \"../../Redux/redux_store\";\r\nimport { loginTC, setResponseErrorAC } from \"../../Redux/loginReducer\";\r\nimport { PATH } from \"../../App\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const [typePassword, setTypePassword] = useState<string>('password')\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n    const responseError = useSelector<AppStateType, string>(state => state.login.responseError)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.profile} />\r\n    }\r\n\r\n    const setUserData = () => {\r\n        dispatch(loginTC({ email, password, rememberMe }))\r\n    }\r\n    const onSetUpEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpRememberMe = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n    const onClickTypePassword = () => {\r\n        if (typePassword === 'password') {\r\n            setTypePassword('text')\r\n        } else if (typePassword === 'text') {\r\n            setTypePassword('password')\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Sign In\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onSetUpEmail} />\r\n                    </div>\r\n                    <div className={style.formInput}>\r\n                        <input type={typePassword} placeholder='Enter your password' onChange={onSetUpPassword} />\r\n                        <span className={style.photoEye} onClick={onClickTypePassword} />\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <div className={style.forgotPassword}>\r\n                        <input type={\"checkbox\"} checked={rememberMe} onChange={onSetUpRememberMe} />RememberMe\r\n                    </div>\r\n                    <div>\r\n                        <button className={style.loginButton} onClick={setUserData}>Login</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.askAboutAccount}>\r\n                    <span>Don’t have an account?</span>\r\n                </div>\r\n                <div className={style.singUp}>\r\n                    <span>Sign Up</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registrationTC, setResponseError } from '../../Redux/registrationReducer';\r\nimport { AppStateType } from '../../Redux/redux_store';\r\nimport style from './Registartion.module.css';\r\nimport { Redirect } from 'react-router';\r\nimport { PATH } from '../../App';\r\n\r\nconst Registration = () => {\r\n  const dispatch = useDispatch();\r\n  const isRegistration = useSelector<AppStateType, boolean>(state => state.registration.isRegistration)\r\n  const responseError = useSelector<AppStateType, string>(state => state.registration.responseError)\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n  const [email, setEmail] = useState<string>('')\r\n  const [password, setPassword] = useState<string>('')\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n  const [error, setError] = useState<string>('');\r\n  const [typePassword, setTypePassword] = useState<string>('password')\r\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState<string>('password')\r\n\r\n  const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n  const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n  const onChangeConfirmPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(event.currentTarget.value)\r\n  }\r\n  const onKeyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.charCode === 13) {\r\n      setRegistrationData()\r\n    }\r\n  }\r\n  const onClickTypePassword = () => {\r\n    if (typePassword === 'password') {\r\n      setTypePassword('text')\r\n    } else if (typePassword === 'text') {\r\n      setTypePassword('password')\r\n    }\r\n  }\r\n\r\n  const onClickTypeConfirmPassword = () => {\r\n    if (typeConfirmPassword === 'password') {\r\n      setTypeConfirmPassword('text')\r\n    } else if (typeConfirmPassword === 'text') {\r\n      setTypeConfirmPassword('password')\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const setRegistrationData = () => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n      setError('Неверный логин')\r\n    } /* else if (!/^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8,}$/i.test(password)) {\r\n      setError('Неверный пароль')\r\n    } */ else {\r\n      if (password === confirmPassword) {\r\n        dispatch(registrationTC({ email, password }))\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('')\r\n      } else {\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('Пароль не совпадает')\r\n      }\r\n    }\r\n  }\r\n  const onChangeCancel = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setEmail('')\r\n    setPassword('')\r\n    setConfirmPassword('')\r\n    setError('')\r\n    dispatch(setResponseError(''))\r\n  }\r\n\r\n  if (isRegistration) {\r\n    return <Redirect to={PATH.login} />\r\n  }\r\n  if (isAuth) {\r\n    return <Redirect to={PATH.profile} />\r\n  }\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.mainBlock}>\r\n        <div className={style.title}>\r\n          It-incubator\r\n        </div>\r\n        <div className={style.subTitle}>\r\n          Sign Up\r\n        </div>\r\n        <div className={style.form}>\r\n          <div className={style.formInput}>\r\n            <input type=\"email\" placeholder='Enter your email' value={email} onChange={onChangeEmail} />\r\n          </div>\r\n          <div className={`${style.formInput}`}>\r\n            <input type={typePassword} placeholder='Enter your password' value={password} onChange={onChangePassword} />\r\n            <span className={style.photoEye} onClick={onClickTypePassword} />\r\n          </div>\r\n          <div className={`${style.formInput} ${style.formInputLastChild}`}>\r\n            <input type={typeConfirmPassword} placeholder='Confirm your password' value={confirmPassword} onKeyPress={onKeyPressHandler} onChange={onChangeConfirmPassword} />\r\n            <span className={style.photoEye} onClick={onClickTypeConfirmPassword} />\r\n            <span className={style.formError}>{error ? error : responseError ? responseError : ''}</span>\r\n          </div>\r\n          <div className={style.flexButtons}>\r\n            <div >\r\n              <button className={style.cancelButton} onClick={onChangeCancel}>Cancel</button>\r\n            </div>\r\n            <div>\r\n              <button className={style.logisterButton} onClick={setRegistrationData}>Register</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Registration;\r\n\r\n","import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport style from './LogOut.module.css'\r\nimport {logoutTC} from \"../../Redux/loginReducer\";\r\n\r\nexport const LogOut= () => {\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [dispatch])\r\n\r\n    return <>\r\n        <button className={style.logoutButton} onClick={logoutHandler}>LOGOUT</button>\r\n    </>\r\n}","import React, { useEffect } from 'react';\r\nimport style from './Profile.module.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../Redux/redux_store\";\r\nimport { isAuthTC } from '../../Redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { PATH } from '../../App';\r\nimport { LogOut } from \"../LogOut/LogOut\";\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector<AppStateType, dataLoginType>(state => state.login.dataLogin)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    useEffect(() => {\r\n        if (!userData.created) {\r\n            dispatch(isAuthTC());\r\n        }\r\n    }, [dispatch])\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.login} />\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div>{JSON.stringify(userData)}</div>\r\n            <button><LogOut /></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n\r\nexport type dataLoginType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string\r\n    avatar: string | null,\r\n    publicCardPacksCount: number,\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n}","import React, { ChangeEvent, useState } from 'react';\r\nimport style from './PasswordRecovery.module.css';\r\nimport { passwordRecoveryThunk, setResponseErrorPassword } from \"../../Redux/passwordRecoveryReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../Redux/redux_store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst PasswordRecovery = () => {\r\n    const isRecovered = useSelector<AppStateType, boolean>(state => state.passwordRecovery.isRecovered)\r\n    const responseError = useSelector<AppStateType, string>(state => state.passwordRecovery.responseError)\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [isRedirect, setRedirect] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setResponseErrorPassword(\"\"))\r\n    }\r\n    const onSendEmail = () => {\r\n        const recoveryData = {\r\n            email: email,\r\n            from: 'test-front-admin <ai73a@yandex.by>)',\r\n            message: `<div style=\"background-color: lime; padding: 15px\"> \r\n                        password recovery link: <a href='https://tropicdenis.github.io/friday_project/#/newPassword/$token$'>link</a>\r\n                      </div>`\r\n        };\r\n        dispatch(passwordRecoveryThunk(recoveryData))\r\n    }\r\n\r\n\r\n    const onRedirectToLogin = () => {\r\n        setRedirect(true)\r\n    }\r\n    if (isRecovered) {\r\n        return (<Redirect to={'/newPassword'} />)\r\n    }\r\n    if (isRedirect) {\r\n        return (<Redirect to={'/login'} />)\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Forgot your password?\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onChangeEmail} value={email} />\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <p className={style.textAfterInput}>\r\n                        Enter your email address and we will send you further instructions\r\n                    </p>\r\n                    <div>\r\n                        <button className={style.mainButton} onClick={onSendEmail}>Send Instructions</button>\r\n                    </div>\r\n                </div>\r\n                <div className={style.askAboutAccount} onClick={onRedirectToLogin}>\r\n                    <span>Did you remember your password?</span>\r\n                </div>\r\n                <div className={style.tryLogin} onClick={onRedirectToLogin}>\r\n                    <span>Try logging in</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordRecovery;\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport style from './NewPassword.module.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setNewPasswordTC, setRecoveryFlag } from \"../../Redux/passwordRecoveryReducer\";\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { AppStateType } from '../../Redux/redux_store';\r\nimport { PATH } from '../../App';\r\n\r\nconst NewPassword = () => {\r\n\r\n  const isInfo = useSelector<AppStateType, boolean>(state => state.passwordRecovery.isInfo)\r\n  const dispatch = useDispatch();\r\n  dispatch(setRecoveryFlag(false))\r\n\r\n  const { token } = useParams<{ token: string }>()\r\n  const [newPassword, setNewPassword] = useState('')\r\n\r\n  const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPassword(e.currentTarget.value);\r\n  }\r\n\r\n  const onChangeNewPasswordAPI = () => {\r\n    dispatch(setNewPasswordTC({ password: newPassword, resetPasswordToken: token }))\r\n  }\r\n\r\n  if (!isInfo) {\r\n    return <Redirect to={PATH.login} />\r\n  }\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.mainBlock}>\r\n        <div className={style.title}>\r\n          It-incubator\r\n        </div>\r\n        <div className={style.subTitle}>\r\n          Forgot your password?\r\n        </div>\r\n        <div className={style.form}>\r\n          <div className={style.formInput}>\r\n            <input type=\"password\" placeholder='Enter your new password' value={newPassword} onChange={onChangeNewPassword} />\r\n            <span className={style.formError} />\r\n          </div>\r\n          <p className={style.textAfterInput}>\r\n            Create new password and we will send you further instructions to email\r\n            </p>\r\n          <div>\r\n            <button onClick={onChangeNewPasswordAPI} className={style.mainButton}>Create new password</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewPassword;\r\n","import React from 'react';\r\nimport style from './Component404.module.css';\r\n\r\nconst Component404 = () => {\r\n  return (\r\n    <div className={style.main}>\r\n      Page not found!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Component404;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to={\"/registration\"} activeClassName={s.activeLink}>Registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/login\"} activeClassName={s.activeLink}>Login</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/profile\"} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/passwordRecovery\"} activeClassName={s.activeLink}>PasswordRecovery</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={`/newPassword/`} activeClassName={s.activeLink}>NewPassword</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={`/pack/`} activeClassName={s.activeLink}>Pack</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={`/cards/1`} activeClassName={s.activeLink}>Cards</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/preloader.b0090460.svg\";","import React from \"react\";\r\nimport preloader from \"../../img/preloader.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <img src={preloader} alt={\"\"} />\r\n}\r\n\r\n","import React, {ChangeEvent, useCallback, useState} from 'react'\r\nimport style from './Search.module.css'\r\nimport {useDispatch} from 'react-redux'\r\nimport {getCardsPackTC, setSearchNameAC} from \"../../Redux/packsReducer\";\r\n\r\nexport const Search = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = useCallback(() => {\r\n        if (inputValue) {\r\n            dispatch(setSearchNameAC(inputValue))\r\n        }\r\n        else {\r\n           dispatch(getCardsPackTC(3))\r\n        }\r\n        setInputValue('')\r\n\r\n    }, [dispatch, inputValue])\r\n\r\n    return (\r\n        <div>\r\n            <input className={style.searchInput}\r\n                   onChange={onChange}\r\n                   value={inputValue}\r\n                   type=\"text\"\r\n                   placeholder=\"Search name\"\r\n                   autoFocus>\r\n            </input>\r\n            <button type=\"submit\"\r\n                    onClick={onSubmit}\r\n                    className={style.searchButton}>\r\n                Search\r\n            </button>\r\n        </div>)\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport {Slider} from \"@material-ui/core\";\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange: (value: [number, number]) => void\r\n    value: [number, number]\r\n    min?: number,\r\n    max?: number,\r\n    step: number | null,\r\n}\r\n\r\nexport const SuperRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        value, onChangeRange,\r\n        min, max,\r\n        step , ...restProps\r\n    }\r\n) => {\r\n    const handleChangeSlider = (event: ChangeEvent<{}>, value: number | number[]) => {\r\n        onChangeRange && onChangeRange(value as [number, number])\r\n    }\r\n\r\n    return <Slider\r\n                value={value}\r\n                onChange={handleChangeSlider}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                step={step}\r\n            />\r\n}\r\n\r\n\r\n","import {useState} from \"react\";\r\nimport style from \"../Cards/Cards.module.css\"\r\nimport {SuperRange} from \"./SuperRange\";\r\n\r\nexport const Range = () => {\r\n    const [value1, setValue1] = useState<number>(0);\r\n    const [value2, setValue2] = useState<number>(100);\r\n\r\n    const onChangeRange = (value: number | number[]) => {\r\n        if (Array.isArray(value)) {\r\n            setValue1(value[0])\r\n            setValue2(value[1])\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <SuperRange\r\n                value={[value1, value2]}\r\n                onChangeRange={onChangeRange}\r\n                step={1}/>\r\n            <div className={style.values}>\r\n                <span>{value1}</span>\r\n                <span>{value2}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {getCardsTC} from '../../../Redux/cardsReducer';\r\nimport style from '../OnePack/OnePack.module.css';\r\n\r\ntype OnePackType = {\r\n\tpackId: string\r\n\tname: string\r\n\tcardsCount: number\r\n\tupdated: string\r\n\tonClickDeletePack: (packId: string) => void\r\n\tonClickUpdatePack: (packId: string) => void\r\n}\r\n\r\nexport const OnePack = (props: OnePackType) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onClickDeletePackOnButton = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\tprops.onClickDeletePack(props.packId)\r\n\t}\r\n\r\n\tconst onClickUpdatePackOnButton = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\tprops.onClickUpdatePack(props.packId)\r\n\t}\r\n\r\n\treturn <div className={style.flexCards}>\r\n\t\t<div>{props.name}</div>\r\n\t\t<div>{props.cardsCount}</div>\r\n\t\t<div>{props.updated}</div>\r\n\t\t<div><button onClick={onClickDeletePackOnButton}>delete</button></div>\r\n\t\t<div><button onClick={onClickUpdatePackOnButton}>update</button></div>\r\n\t\t<div><NavLink to={`/cards/${props.packId}`} onClick={() => {\r\n\t\t\tdispatch(getCardsTC(props.packId))\r\n\t\t}}>cards</NavLink></div>\r\n\t</div>\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\ntype BasicPaginationPropsType = {\r\n    cardPacksTotalCount: number\r\n    page: number\r\n    onChange?: (event: React.ChangeEvent<unknown>, page: number) => void;\r\n}\r\n\r\nexport function BasicPagination(props: BasicPaginationPropsType) {\r\n    const classes = useStyles();\r\n    const count = Math.ceil(props.cardPacksTotalCount/10)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Pagination count={count}\r\n                        color=\"secondary\"\r\n                        page={props.page}\r\n                        onChange={props.onChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    createCardsPackTC,\r\n    deleteCardsPackTC,\r\n    getCardsPackTC,\r\n    initialCardsStateType,\r\n    updateCardsPackTC\r\n} from '../../Redux/packsReducer';\r\nimport {AppStateType} from '../../Redux/redux_store';\r\nimport style from '../Pack/Packs.module.css';\r\nimport {Search} from \"../Search/Search\";\r\nimport {Range} from \"../Range/Range\";\r\nimport {OnePack} from './OnePack/OnePack';\r\nimport {BasicPagination} from \"../Paginator/Paginator\";\r\n\r\nconst Packs = () => {\r\n    const dispatch = useDispatch();\r\n    const cardsFromState = useSelector<AppStateType, initialCardsStateType>(state => state.packs);\r\n    const cardPacksTotalCount = useSelector<AppStateType, number>( state => state.packs.cardPacksTotalCount)\r\n    const cardPage = useSelector<AppStateType, number>( state => state.packs.page)\r\n    const [titlePacks, setTitlePacks] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsPackTC(cardPage))\r\n    }, [dispatch])\r\n\r\n\r\n    const onChangeNewTitlePacks = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTitlePacks(event.currentTarget.value);\r\n    }\r\n\r\n    const cardsPack = {\r\n        name: titlePacks\r\n    }\r\n\r\n    const onClickCreateCardsPack = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        dispatch(createCardsPackTC({ cardsPack }, cardPage));\r\n        setTitlePacks('')\r\n    }\r\n    const onClickDeletePack = useCallback((packId: string) => {\r\n        dispatch(deleteCardsPackTC(packId, cardPage))\r\n    }, [cardsFromState])\r\n\r\n    const onClickUpdatePack = useCallback((packId: string) => {\r\n        dispatch(updateCardsPackTC({\r\n            cardsPack: {\r\n                _id: packId,\r\n                name: 'new name'\r\n            }\r\n        }, cardPage))\r\n    }, [cardsFromState])\r\n\r\n    const changePagePaginator = (event: React.ChangeEvent<unknown>, page: number) => {\r\n        dispatch(getCardsPackTC(page))\r\n    }\r\n\r\n    const allPacks = cardsFromState.cardPacks.map(pack => <OnePack\r\n        packId={pack._id}\r\n        name={pack.name}\r\n        cardsCount={pack.cardsCount}\r\n        updated={pack.updated}\r\n        onClickDeletePack={onClickDeletePack}\r\n        onClickUpdatePack={onClickUpdatePack}\r\n    />\r\n    )\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.components}>\r\n                <Range />\r\n                <Search />\r\n            </div>\r\n            <div>PacksPage</div>\r\n            <div className={style.flexCardsTitle}>\r\n                <div>name</div>\r\n                <div>cardsCount</div>\r\n                <div>updated</div>\r\n                <div><input type=\"text\" value={titlePacks} onChange={onChangeNewTitlePacks} /></div>\r\n                <div>\r\n                    <button onClick={onClickCreateCardsPack}>add</button>\r\n                </div>\r\n            </div>\r\n            <div>{allPacks}</div>\r\n            <BasicPagination page={cardPage} cardPacksTotalCount={cardPacksTotalCount} onChange={changePagePaginator} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Packs;\r\n\r\n\r\n","import React from \"react\";\r\n\r\ntype OneCardType = {\r\n\tcardId: string\r\n\tquestion: string\r\n\tcreated: string\r\n\tdeleteCard: (cardId: string) => void\r\n\tupdateCard: (card: any) => void\r\n}\r\n\r\nexport const OneCard = (props: OneCardType) => {\r\n\r\n\tconst deleteOneCard = () => {\r\n\t\tprops.deleteCard(props.cardId)\r\n\t}\r\n\tconst updateOneCard = () => {\r\n\t\tprops.updateCard(props.cardId)\r\n\t}\r\n\r\n\treturn (<div>\r\n\t\t<span>{props.created}{props.question}</span>\r\n\t\t<button onClick={deleteOneCard}>delete</button>\r\n\t\t<button onClick={updateOneCard}>update</button>\r\n\t</div>\r\n\t)\r\n}\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport style from \"./Cards.module.css\"\r\nimport {Range} from \"../Range/Range\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux_store\";\r\nimport {createCardTC, deleteCardTC, getCardsTC, InitialStateCards, updateCardTC} from \"../../Redux/cardsReducer\";\r\nimport {Search} from \"../Search/Search\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {OneCard} from \"./OneCard/OneCard\";\r\n\r\nexport const Cards = () => {\r\n    const dispatch = useDispatch()\r\n    const allCards = useSelector<AppStateType, InitialStateCards>(state => state.cards)\r\n\r\n    const {cardsPack_id} = useParams<{ cardsPack_id: string }>()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(cardsPack_id))\r\n    }, [dispatch, cardsPack_id])\r\n\r\n    const onClickCreateCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        dispatch(createCardTC({\r\n            card: {\r\n                cardsPack_id\r\n            }\r\n        }, cardsPack_id))\r\n    }\r\n\r\n    const onClickDeleteCard = (cardId: string) => {\r\n        dispatch(deleteCardTC(cardId, cardsPack_id))\r\n    }\r\n    const onClickUpdateCard = (cardId: string) => {\r\n        dispatch(updateCardTC({\r\n            card: {\r\n                _id: cardId,\r\n                question: 'new question'\r\n            }\r\n        }, cardsPack_id))\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.components}>\r\n                <Range/>\r\n                <Search/>\r\n            </div>\r\n            <div className={style.table}>Table Cards\r\n                <div className={style.borderTable}>\r\n                    <span>Question</span>\r\n                    <span>Answer</span>\r\n                    <span>Grade</span>\r\n                    <span>Updated</span>\r\n                    <span>Url</span>\r\n                    <button onClick={onClickCreateCard}>Add</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.bodyTable}>\r\n                <div className={style.borderTable}>\r\n                    {allCards.cards.map(c => (<OneCard\r\n                            cardId={c._id}\r\n                            question={c.question}\r\n                            created={c.created}\r\n                            deleteCard={onClickDeleteCard}\r\n                            updateCard={onClickUpdateCard}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport style from './App.module.css';\r\nimport { Login } from \"./components/Login/Login\";\r\nimport Registration from './components/Registration/Registartion';\r\nimport Profile from './components/Profile/Profile';\r\nimport PasswordRecovery from './components/PasswordRecovery/PasswordRecovery';\r\nimport NewPassword from './components/NewPassword/NewPassword';\r\nimport Component404 from \"./components/404/Component404\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport { Preloader } from \"./common/Preloder/preloder\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"./Redux/redux_store\";\r\nimport Pack from './components/Pack/Packs';\r\nimport { Cards } from \"./components/Cards/Cards\";\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    registration: '/registration',\r\n    profile: '/profile',\r\n    Component404: '/404',\r\n    passwordRecovery: '/passwordRecovery',\r\n    newPassword: '/newPassword/:token?',\r\n    pack: '/pack',\r\n    cards: '/cards/:cardsPack_id?'\r\n}\r\n\r\nexport const App = () => {\r\n\r\n    const status = useSelector<AppStateType, string>(state => state.app.status)\r\n\r\n    return (\r\n        <div className={style.app}>\r\n            <div className={style.navBar}><Navbar /></div>\r\n            {status === 'loading' && <div className={style.preLoader}><Preloader /></div>}\r\n            <Switch>\r\n                <Route path={PATH.login} render={() => <Login />} />\r\n                <Route path={PATH.registration} render={() => <Registration />} />\r\n                <Route path={PATH.profile} render={() => <Profile />} />\r\n                <Route path={PATH.Component404} render={() => <Component404 />} />\r\n                <Route path={PATH.passwordRecovery} render={() => <PasswordRecovery />} />\r\n                <Route path={PATH.newPassword} render={() => <NewPassword />} />\r\n                <Route path={PATH.pack} render={() => <Pack />} />\r\n                <Route path={PATH.cards} render={() => <Cards />} />\r\n                <Redirect from={'/'} to={PATH.profile} />\r\n                <Redirect from={'*'} to={\"/404\"} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport {store} from \"./Redux/redux_store\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1DuNX\",\"item\":\"Navbar_item__KDE9e\",\"activeLink\":\"Navbar_activeLink__FQkaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Registartion_main__3uS6X\",\"mainBlock\":\"Registartion_mainBlock__3yB36\",\"title\":\"Registartion_title__3hMMm\",\"subTitle\":\"Registartion_subTitle__33gvb\",\"form\":\"Registartion_form__3ucK0\",\"formInput\":\"Registartion_formInput__1Chs7\",\"photoEye\":\"Registartion_photoEye__MY2Yr\",\"formInputLastChild\":\"Registartion_formInputLastChild__3GZe_\",\"formError\":\"Registartion_formError__vEfwM\",\"flexButtons\":\"Registartion_flexButtons__2r60e\",\"cancelButton\":\"Registartion_cancelButton__1zVLf\",\"logisterButton\":\"Registartion_logisterButton__SEjfC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__3gBbi\",\"mainBlock\":\"Login_mainBlock__3yOhj\",\"title\":\"Login_title__2524j\",\"subTitle\":\"Login_subTitle__1XuJO\",\"form\":\"Login_form__2HXNT\",\"formInput\":\"Login_formInput__1AkTp\",\"photoEye\":\"Login_photoEye__36pvg\",\"forgotPassword\":\"Login_forgotPassword__19Obu\",\"loginButton\":\"Login_loginButton__3vCCj\",\"askAboutAccount\":\"Login_askAboutAccount__37UQh\",\"singUp\":\"Login_singUp__1hI8h\",\"formError\":\"Login_formError__2GpGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PasswordRecovery_main__T7YGS\",\"mainBlock\":\"PasswordRecovery_mainBlock__1rIFD\",\"title\":\"PasswordRecovery_title__VGcaE\",\"subTitle\":\"PasswordRecovery_subTitle__2Mjds\",\"form\":\"PasswordRecovery_form__23FVo\",\"formInput\":\"PasswordRecovery_formInput__29t-k\",\"textAfterInput\":\"PasswordRecovery_textAfterInput__3HnyX\",\"mainButton\":\"PasswordRecovery_mainButton__z7mmb\",\"askAboutAccount\":\"PasswordRecovery_askAboutAccount__YhHVe\",\"tryLogin\":\"PasswordRecovery_tryLogin__1pqML\",\"formError\":\"PasswordRecovery_formError__zsqA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewPassword_main__175_5\",\"mainBlock\":\"NewPassword_mainBlock__13kbf\",\"title\":\"NewPassword_title__1SCQp\",\"subTitle\":\"NewPassword_subTitle__1bRO8\",\"form\":\"NewPassword_form__1cTH-\",\"formInput\":\"NewPassword_formInput__yBzhz\",\"textAfterInput\":\"NewPassword_textAfterInput__1NRqx\",\"mainButton\":\"NewPassword_mainButton__39BFe\",\"askAboutAccount\":\"NewPassword_askAboutAccount__1KXWl\",\"tryLogin\":\"NewPassword_tryLogin__18dB1\",\"formError\":\"NewPassword_formError__uqUND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Cards_main__3wM6P\",\"search\":\"Cards_search__1XAgp\",\"components\":\"Cards_components__3T52U\",\"values\":\"Cards_values__2vWxq\",\"table\":\"Cards_table__Bb3hO\",\"borderTable\":\"Cards_borderTable__2K5tY\",\"bodyTable\":\"Cards_bodyTable__3lYUn\",\"paginator\":\"Cards_paginator__1e3et\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3nn_k\",\"navBar\":\"App_navBar__3k9P2\",\"preLoader\":\"App_preLoader__1jlyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__2JdUe\",\"flexCards\":\"Packs_flexCards__2K7qf\",\"flexCardsTitle\":\"Packs_flexCardsTitle__27ZJJ\",\"components\":\"Packs_components__3Sp9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchButton\":\"Search_searchButton__1Ac8g\",\"searchInput\":\"Search_searchInput__16vvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__7inbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutButton\":\"LogOut_logoutButton__2j472\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Component404_main__24ymA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"OnePack_main__10gdc\",\"flexCards\":\"OnePack_flexCards__14S5c\",\"flexCardsTitle\":\"OnePack_flexCardsTitle__3uhnB\"};"],"sourceRoot":""}