{"version":3,"sources":["components/Navbar/Navbar.module.css","SuperComponents/SuperInputText/SuperInputText.module.css","SuperComponents/SuperButton/SuperButton.module.css","SuperComponents/SuperCheckBox/SuperCheckbox.module.css","components/Test/Test.module.css","Redux/profileReducer.tsx","Redux/app_reducer.ts","Redux/redux_store.ts","components/Login/Login.tsx","components/Registration/Registartion.tsx","components/Profile/Profile.tsx","components/PasswordRecovery/PasswordRecovery.tsx","components/NewPassword/NewPassword.tsx","SuperComponents/SuperInputText/SuperInputText.tsx","SuperComponents/SuperButton/SuperButton.tsx","SuperComponents/SuperCheckBox/SuperCheckbox.tsx","components/Test/Test.tsx","components/404/Component404.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["module","exports","PROF_ACT","initialState","profileReducer","state","action","type","APP_ACT","rootReducer","combineReducers","profilePage","app","appReducer","store","createStore","applyMiddleware","thunkMiddleware","Login","className","Registration","Profile","PasswordRecovery","NewPassword","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","useState","text","setText","showAlert","alert","setChecked","column","onClick","Component404","Navbar","nav","item","to","activeClassName","activeLink","active","App","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.355030a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1DuNX\",\"item\":\"Navbar_item__KDE9e\",\"activeLink\":\"Navbar_activeLink__FQkaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__iWYxx\",\"superInput\":\"SuperInputText_superInput__cO7gB\",\"errorInput\":\"SuperInputText_errorInput__3jkjh\",\"error\":\"SuperInputText_error__3mWdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__35zQr\",\"red\":\"SuperButton_red__14Af0\",\"button\":\"SuperButton_button__ty_Hu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2vxIs\",\"checkbox\":\"SuperCheckbox_checkbox__3kJtk\",\"spanClassName\":\"SuperCheckbox_spanClassName__29DUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"Test_blue__iC-Oa\",\"column\":\"Test_column__CU4tJ\"};","const PROF_ACT = \"PROF_ACT\";\r\n\r\nexport type ProfileActionsType = ReturnType<typeof addPostActionCreator>\r\n\r\nlet initialState: any = {};\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionsType) => {\r\n    switch (action.type) {\r\n        case PROF_ACT:\r\n            return {\r\n                ...state,\r\n            };\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newVariable: string) => {\r\n    return {\r\n        type: PROF_ACT,\r\n        newVariable\r\n    } as const\r\n}\r\n\r\n\r\nexport default profileReducer","const APP_ACT = \"APP_ACT\";\r\n\r\nexport type ProfileActionsType = ReturnType<typeof addPostActionCreator>\r\n\r\nlet initialState: any = {};\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionsType) => {\r\n    switch (action.type) {\r\n        case APP_ACT:\r\n            return {\r\n                ...state,\r\n            };\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newVariable: string) => {\r\n    return {\r\n        type: APP_ACT,\r\n        newVariable\r\n    } as const\r\n}\r\n\r\n\r\nexport default profileReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport appReducer from \"./app_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));","import React from 'react';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  return (\r\n      <div className=\"Login\">\r\n          Login\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './Registartion.css';\r\n\r\nconst Registration = () => {\r\n  return (\r\n      <div className=\"Registration\">\r\n          Registration\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","import React from 'react';\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n  return (\r\n      <div className=\"Profile\">\r\n          Profile\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './PasswordRecovery.css';\r\n\r\nconst PasswordRecovery = () => {\r\n  return (\r\n      <div className=\"PasswordRecovery\">\r\n          PasswordRecovery\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default PasswordRecovery;\r\n","import React from 'react';\r\nimport './NewPassword.css';\r\n\r\nconst NewPassword = () => {\r\n  return (\r\n      <div className=\"NewPassword\">\r\n          NewPassword\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default NewPassword;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"../../SuperComponents/SuperInputText/SuperInputText\";\r\nimport s from \"./Test.module.css\";\r\nimport SuperButton from \"../../SuperComponents/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../SuperComponents/SuperCheckBox/SuperCheckbox\";\r\n\r\nfunction Test() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            Test Component\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport './Component404.css';\r\n\r\nconst Component404 = () => {\r\n  return (\r\n      <div className=\"Component404\">\r\n        404: Page not found!\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Component404;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/login\"} activeClassName={s.activeLink}>Login</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to={\"/registration\"} activeClassName={s.activeLink}>Registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/profile\"} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/404\"} activeClassName={s.activeLink}>Component404</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/passwordRecovery\"} activeClassName={s.activeLink}>PasswordRecovery</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/newPassword\"} activeClassName={s.activeLink}>NewPassword</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/test\"} activeClassName={s.activeLink}>Test</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Navbar","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from \"./components/Login/Login\";\r\nimport Registration from './components/Registration/Registartion';\r\nimport Profile from './components/Profile/Profile';\r\nimport PasswordRecovery from './components/PasswordRecovery/PasswordRecovery';\r\nimport NewPassword from './components/NewPassword/NewPassword';\r\nimport Test from \"./components/Test/Test\";\r\nimport Component404 from \"./components/404/Component404\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar />\r\n            <Route path={'/login'} render={() => <Login/>}/>\r\n            <Route path={'/registration'} render={() => <Registration/>}/>\r\n            <Route path={'/profile'} render={() => <Profile/>}/>\r\n            <Route path={'/404'} render={() => <Component404/>}/>\r\n            <Route path={'/passwordRecovery'} render={() => <PasswordRecovery/>}/>\r\n            <Route path={'/newPassword'} render={() => <NewPassword/>}/>\r\n            <Route path={'/test'} render={() => <Test/>}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport {store} from \"./Redux/redux_store\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}