{"version":3,"sources":["components/Login/Login.module.css","components/PasswordRecovery/PasswordRecovery.module.css","SuperComponents/SuperInputText/SuperInputText.module.css","SuperComponents/SuperButton/SuperButton.module.css","SuperComponents/SuperCheckBox/SuperCheckbox.module.css","components/Test/Test.module.css","components/Navbar/Navbar.module.css","Redux/passwordRecoveryReducer.ts","api/cardsApi.ts","Redux/loginReducer.ts","Redux/registrationReducer.ts","Redux/app_reducer.ts","Redux/redux_store.ts","components/Login/Login.tsx","components/Registration/Registartion.tsx","components/Profile/Profile.tsx","components/PasswordRecovery/PasswordRecovery.tsx","components/NewPassword/NewPassword.tsx","SuperComponents/SuperInputText/SuperInputText.tsx","SuperComponents/SuperButton/SuperButton.tsx","SuperComponents/SuperCheckBox/SuperCheckbox.tsx","components/Test/Test.tsx","components/404/Component404.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx","components/Registration/Registartion.module.css"],"names":["module","exports","RECOVERY_ACTIONS_TYPE","instance","axios","create","baseURL","withCredentials","authAPI","data","post","recoveryData","initialState","isLoggedIn","dataLogin","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","responseError","setResponseErrorAC","type","AUTH_ACTIONS_TYPE","isRecovered","setRecoveryFlag","SET_RECOVERY_FlAG","setResponseErrorPassword","SET_RESPONSE_ERROR_PASSWORD","APP_ACT","profileReducer","state","action","isRegistration","setResponseError","SET_RESPONSE_ERROR","registrationTC","dispatch","then","res","SET_REGISTRATION_DATA","catch","response","rootReducer","combineReducers","login","value","app","appReducer","registration","passwordRecovery","store","createStore","applyMiddleware","thunkMiddleware","Login","useState","setEmail","password","setPassword","setRememberMe","typePassword","setTypePassword","useDispatch","useSelector","to","className","style","main","mainBlock","title","subTitle","form","formInput","placeholder","onChange","event","currentTarget","photoEye","onClick","formError","forgotPassword","checked","loginButton","setDataResponseAC","askAboutAccount","singUp","Registration","confirmPassword","setConfirmPassword","setError","typeConfirmPassword","setTypeConfirmPassword","setRegistrationData","test","PATH","formInputLastChild","onKeyPress","charCode","flexButtons","cancelButton","logisterButton","Profile","userData","JSON","stringify","PasswordRecovery","isRedirect","setRedirect","onRedirectToLogin","e","textAfterInput","mainButton","passwordRecoveryThunk","from","message","tryLogin","NewPassword","SuperInputText","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","Test","text","setText","showAlert","alert","setChecked","column","Component404","Navbar","nav","item","activeClassName","activeLink","active","profile","newPassword","App","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.26f45bf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__3gBbi\",\"mainBlock\":\"Login_mainBlock__3yOhj\",\"title\":\"Login_title__2524j\",\"subTitle\":\"Login_subTitle__1XuJO\",\"form\":\"Login_form__2HXNT\",\"formInput\":\"Login_formInput__1AkTp\",\"photoEye\":\"Login_photoEye__36pvg\",\"forgotPassword\":\"Login_forgotPassword__19Obu\",\"loginButton\":\"Login_loginButton__3vCCj\",\"askAboutAccount\":\"Login_askAboutAccount__37UQh\",\"singUp\":\"Login_singUp__1hI8h\",\"formError\":\"Login_formError__2GpGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PasswordRecovery_main__T7YGS\",\"mainBlock\":\"PasswordRecovery_mainBlock__1rIFD\",\"title\":\"PasswordRecovery_title__VGcaE\",\"subTitle\":\"PasswordRecovery_subTitle__2Mjds\",\"form\":\"PasswordRecovery_form__23FVo\",\"formInput\":\"PasswordRecovery_formInput__29t-k\",\"textAfterInput\":\"PasswordRecovery_textAfterInput__3HnyX\",\"mainButton\":\"PasswordRecovery_mainButton__z7mmb\",\"askAboutAccount\":\"PasswordRecovery_askAboutAccount__YhHVe\",\"tryLogin\":\"PasswordRecovery_tryLogin__1pqML\",\"formError\":\"PasswordRecovery_formError__zsqA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__iWYxx\",\"superInput\":\"SuperInputText_superInput__cO7gB\",\"errorInput\":\"SuperInputText_errorInput__3jkjh\",\"error\":\"SuperInputText_error__3mWdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__35zQr\",\"red\":\"SuperButton_red__14Af0\",\"button\":\"SuperButton_button__ty_Hu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2vxIs\",\"checkbox\":\"SuperCheckbox_checkbox__3kJtk\",\"spanClassName\":\"SuperCheckbox_spanClassName__29DUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"Test_blue__iC-Oa\",\"column\":\"Test_column__CU4tJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1DuNX\",\"item\":\"Navbar_item__KDE9e\",\"activeLink\":\"Navbar_activeLink__FQkaD\"};","import {Dispatch} from \"redux\";\r\nimport {authAPI, PasswordRecoveryDataType} from \"../api/cardsApi\";\r\nimport {ErrorDataType} from \"./registrationReducer\";\r\n\r\nexport enum RECOVERY_ACTIONS_TYPE {\r\n    SET_RECOVERY_FlAG = \"SET_RECOVERY_FlAG\",\r\n    SET_RESPONSE_ERROR_PASSWORD = \"SET_RESPONSE_ERROR_PASSWORD\"\r\n}\r\n\r\nlet initialState = {\r\n    isRecovered: false,\r\n    responseError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FlAG:\r\n            return {...state, isRecovered: action.isRecovered}\r\n        case RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR_PASSWORD:\r\n            return { ...state, responseError: action.responseError }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setRecoveryFlag = (isRecovered: boolean) => ({\r\n    type: RECOVERY_ACTIONS_TYPE.SET_RECOVERY_FlAG,\r\n    isRecovered\r\n} as const)\r\nexport const setResponseErrorPassword = (responseError: string) => ({\r\n    type: RECOVERY_ACTIONS_TYPE.SET_RESPONSE_ERROR_PASSWORD,\r\n    responseError\r\n} as const)\r\n\r\n//thunks\r\n\r\nexport const passwordRecoveryThunk = (recoveryData: PasswordRecoveryDataType) => (dispatch: Dispatch) => {\r\n    authAPI.passwordRecovery(recoveryData).then(res => {\r\n        dispatch(setRecoveryFlag(true))\r\n    }).catch((error: ErrorDataType) => {\r\n        dispatch(setResponseErrorPassword(error.response.data.error))\r\n    })\r\n}\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof setRecoveryFlag>\r\n    | ReturnType<typeof setResponseErrorPassword>\r\n\r\n\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    //baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    registration(data: RegistrationDataType) {\r\n        return instance.post('auth/register', data)\r\n    },\r\n    login(data: LoginType) {\r\n        return instance.post<ResponseType>(\"auth/login\", data)\r\n    },\r\n    passwordRecovery(recoveryData: PasswordRecoveryDataType) {\r\n        return instance.post('auth/forgot', recoveryData)\r\n    }\r\n}\r\n//Types\r\nexport type LoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe?: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string | null\r\n    publicCardPacksCount: number\r\n    created: string;\r\n    updated: string;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error: string;\r\n}\r\nexport type RegistrationDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type PasswordRecoveryDataType = {\r\n    email: string,\r\n    from: string,\r\n    message: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, LoginType, ResponseType} from \"../api/cardsApi\";\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    dataLogin: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: 0,\r\n        created: \"\",\r\n        updated: \"\",\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: \"\"\r\n    },\r\n    responseError: \"\"\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateLoginType = initialState, action: ActionType): InitialStateLoginType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-LOGIN-DATA\":\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"LOGIN/SET-DATA\":\r\n            return {...state, dataLogin: action.data}\r\n        case \"LOGIN/SET-RESPONSE-ERROR\":\r\n            return {...state, responseError: action.responseError}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\nexport const setLoginDataAC = (value: boolean) =>\r\n    ({type: \"LOGIN/SET-LOGIN-DATA\", value} as const)\r\nexport const setDataResponseAC = (data: ResponseType) =>\r\n    ({type: \"LOGIN/SET-DATA\", data} as const)\r\nexport const setResponseErrorAC = (responseError: string) =>\r\n    ({type: \"LOGIN/SET-RESPONSE-ERROR\", responseError} as const)\r\n\r\n//Thunks\r\nexport const loginTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    authAPI.login(data)\r\n        .then((res) => {\r\n            dispatch(setLoginDataAC(true))\r\n            dispatch(setDataResponseAC(res.data))\r\n        })\r\n        .catch((error: ErrorDataType) => {\r\n            dispatch(setResponseErrorAC(error.response.data.error))\r\n        })\r\n}\r\n\r\n//Types\r\nexport type ActionType =\r\n    ReturnType<typeof setLoginDataAC>\r\n    | ReturnType<typeof setDataResponseAC>\r\n    | ReturnType<typeof setResponseErrorAC>\r\n\r\nexport type InitialStateLoginType = typeof initialState\r\n\r\ntype ErrorDataType = {\r\n    response: {\r\n        data: ErrorRegistration\r\n    }\r\n}\r\n\r\ntype ErrorRegistration = {\r\n    emailRegExp: {},\r\n    error: string\r\n    in: string\r\n    isEmailValid: boolean\r\n    isPassValid: boolean\r\n    passwordRegExp: string\r\n}","import { Dispatch } from \"redux\";\r\nimport { authAPI, RegistrationDataType } from \"../api/cardsApi\";\r\n\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n\tSET_REGISTRATION_DATA = \"SET_REGISTRATION_DATA\",\r\n\tSET_RESPONSE_ERROR = \"SET_RESPONSE_ERROR\"\r\n}\r\n\r\nlet initialState = {\r\n\tisRegistration: false,\r\n\tresponseError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA:\r\n\t\t\treturn { ...state, isRegistration: action.isRegistration }\r\n\t\tcase AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR:\r\n\t\t\treturn { ...state, responseError: action.responseError }\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n}\r\n\r\n// actions\r\n\r\nexport const setRegistrationData = (isRegistration: boolean) => ({ type: AUTH_ACTIONS_TYPE.SET_REGISTRATION_DATA, isRegistration } as const)\r\nexport const setResponseError = (responseError: string) => ({ type: AUTH_ACTIONS_TYPE.SET_RESPONSE_ERROR, responseError } as const)\r\n\r\n//thunks\r\n\r\nexport const registrationTC = (data: RegistrationDataType) => (dispatch: Dispatch) => {\r\n\tauthAPI.registration(data).then(res => {\r\n\t\tdispatch(setRegistrationData(true))\r\n\t}).catch((error: ErrorDataType) => {\r\n\t\tdispatch(setResponseError(error.response.data.error))\r\n\t})\r\n}\r\n\r\nexport type ActionsType =\r\n\tReturnType<typeof setRegistrationData> |\r\n\tReturnType<typeof setResponseError>\r\n\r\nexport type ErrorDataType = {\r\n\tresponse: {\r\n\t\tdata: ErrorRegistration\r\n\t}\r\n}\r\n\r\ntype ErrorRegistration = {\r\n\temailRegExp: {},\r\n\terror: string\r\n\tin: string\r\n\tisEmailValid: boolean\r\n\tisPassValid: boolean\r\n\tpasswordRegExp: string\r\n}\r\n","const APP_ACT = \"APP_ACT\";\r\n\r\nexport type ProfileActionsType = ReturnType<typeof addPostActionCreator>\r\n\r\nlet initialState: any = {};\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionsType) => {\r\n    switch (action.type) {\r\n        case APP_ACT:\r\n            return {\r\n                ...state,\r\n            };\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newVariable: string) => {\r\n    return {\r\n        type: APP_ACT,\r\n        newVariable\r\n    } as const\r\n}\r\n\r\n\r\nexport default profileReducer","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {passwordRecoveryReducer} from \"./passwordRecoveryReducer\";\r\nimport appReducer from \"./app_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { registrationReducer } from \"./registrationReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    app: appReducer,\r\n    registration: registrationReducer,\r\n    passwordRecovery: passwordRecoveryReducer\r\n});\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './Login.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from \"../../Redux/redux_store\";\r\nimport {loginTC, setResponseErrorAC} from \"../../Redux/loginReducer\";\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [typePassword, setTypePassword] = useState<string>('password')\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn)\r\n    const responseError = useSelector<AppStateType, string>(state => state.login.responseError)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    const setUserData = () => {\r\n            dispatch(loginTC({email, password, rememberMe}))\r\n    }\r\n    const onSetUpEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        dispatch(setResponseErrorAC(\"\"))\r\n    }\r\n    const onSetUpRememberMe = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n    const onClickTypePassword = () => {\r\n        if (typePassword === 'password') {\r\n            setTypePassword('text')\r\n        } else if (typePassword === 'text') {\r\n            setTypePassword('password')\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Sign In\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onSetUpEmail}/>\r\n                    </div>\r\n                    <div className={style.formInput}>\r\n                        <input type={typePassword} placeholder='Enter your password' onChange={onSetUpPassword}/>\r\n                        <span className={style.photoEye} onClick={onClickTypePassword}/>\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <div className={style.forgotPassword}>\r\n                        <input type={\"checkbox\"} checked={rememberMe} onChange={onSetUpRememberMe}/>RememberMe\r\n                    </div>\r\n                    <div>\r\n                        <button className={style.loginButton} onClick={setUserData}>Login</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.askAboutAccount}>\r\n                    <span>Don’t have an account?</span>\r\n                </div>\r\n                <div className={style.singUp}>\r\n                    <span>Sign Up</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registrationTC, setResponseError } from '../../Redux/registrationReducer';\r\nimport { AppStateType } from '../../Redux/redux_store';\r\nimport style from './Registartion.module.css';\r\nimport { Redirect } from 'react-router';\r\nimport { PATH } from '../../App';\r\n\r\nconst Registration = () => {\r\n\r\n  const isRegistration = useSelector<AppStateType, boolean>(state => state.registration.isRegistration)\r\n  const responseError = useSelector<AppStateType, string>(state => state.registration.responseError)\r\n\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState<string>('')\r\n  const [password, setPassword] = useState<string>('')\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n  const [error, setError] = useState<string>('');\r\n  const [typePassword, setTypePassword] = useState<string>('password')\r\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState<string>('password')\r\n\r\n  const onChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n  const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n  const onChangeConfirmPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(event.currentTarget.value)\r\n  }\r\n  const onKeyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.charCode === 13) {\r\n      setRegistrationData()\r\n    }\r\n  }\r\n  const onClickTypePassword = () => {\r\n    if (typePassword === 'password') {\r\n      setTypePassword('text')\r\n    } else if (typePassword === 'text') {\r\n      setTypePassword('password')\r\n    }\r\n  }\r\n\r\n  const onClickTypeConfirmPassword = () => {\r\n    if (typeConfirmPassword === 'password') {\r\n      setTypeConfirmPassword('text')\r\n    } else if (typeConfirmPassword === 'text') {\r\n      setTypeConfirmPassword('password')\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const setRegistrationData = () => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n      setError('Неверный логин')\r\n    } else if (!/^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8,}$/i.test(password)) {\r\n      setError('Неверный пароль')\r\n    } else {\r\n      if (password === confirmPassword) {\r\n        dispatch(registrationTC({ email, password }))\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('')\r\n      } else {\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n        setError('Пароль не совпадает')\r\n      }\r\n    }\r\n  }\r\n  const onChangeCancel = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setEmail('')\r\n    setPassword('')\r\n    setConfirmPassword('')\r\n    setError('')\r\n    dispatch(setResponseError(''))\r\n  }\r\n\r\n  if (isRegistration) {\r\n    return <Redirect to={PATH.login} />\r\n  }\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.mainBlock}>\r\n        <div className={style.title}>\r\n          It-incubator\r\n        </div>\r\n        <div className={style.subTitle}>\r\n          Sign Up\r\n        </div>\r\n        <div className={style.form}>\r\n          <div className={style.formInput}>\r\n            <input type=\"email\" placeholder='Enter your email' value={email} onChange={onChangeEmail} />\r\n          </div>\r\n          <div className={`${style.formInput}`}>\r\n            <input type={typePassword} placeholder='Enter your password' value={password} onChange={onChangePassword} />\r\n            <span className={style.photoEye} onClick={onClickTypePassword}/>\r\n          </div>\r\n          <div className={`${style.formInput} ${style.formInputLastChild}`}>\r\n            <input type={typeConfirmPassword} placeholder='Confirm your password' value={confirmPassword} onKeyPress={onKeyPressHandler} onChange={onChangeConfirmPassword} />\r\n            <span className={style.photoEye} onClick={onClickTypeConfirmPassword}/>\r\n            <span className={style.formError}>{error ? error : responseError ? responseError : ''}</span>\r\n          </div>\r\n          <div className={style.flexButtons}>\r\n            <div >\r\n              <button className={style.cancelButton} onClick={onChangeCancel}>Cancel</button>\r\n            </div>\r\n            <div>\r\n              <button className={style.logisterButton} onClick={setRegistrationData}>Register</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Registration;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport './Profile.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../Redux/redux_store\";\r\n\r\nconst Profile = () => {\r\n  const userData = useSelector<AppStateType>(state => state.login.dataLogin)\r\n\r\n  return (\r\n    <div className=\"Profile\">\r\n      {JSON.stringify(userData)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './PasswordRecovery.module.css';\r\nimport {passwordRecoveryThunk, setResponseErrorPassword} from \"../../Redux/passwordRecoveryReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux_store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst PasswordRecovery = () => {\r\n    const isRecovered = useSelector<AppStateType, boolean>(state => state.passwordRecovery.isRecovered)\r\n    const responseError = useSelector<AppStateType, string>(state => state.passwordRecovery.responseError)\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [isRedirect, setRedirect] = useState(false)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setResponseErrorPassword(\"\"))\r\n    }\r\n    const onSendEmail = () => {\r\n        const recoveryData = {\r\n            email: email,\r\n            from: 'test-front-admin <ai73a@yandex.by>)',\r\n            message: `<div style=\"background-color: lime; padding: 15px\"> \r\n                        password recovery link: <a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n                      </div>`\r\n        };\r\n        dispatch(passwordRecoveryThunk(recoveryData))\r\n    }\r\n\r\n    if (isRecovered) {\r\n       return (<Redirect to={'/newPassword'}/>)\r\n    }\r\n\r\n    const onRedirectToLogin = () => {\r\n        setRedirect(true)\r\n    }\r\n    if (isRedirect) {\r\n        return (<Redirect to={'/login'}/>)\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div className={style.mainBlock}>\r\n                <div className={style.title}>\r\n                    It-incubator\r\n                </div>\r\n                <div className={style.subTitle}>\r\n                    Forgot your password?\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.formInput}>\r\n                        <input type=\"email\" placeholder='Enter your email' onChange={onChangeEmail} value={email}/>\r\n                        <span className={style.formError}>{responseError}</span>\r\n                    </div>\r\n                    <p className={style.textAfterInput}>\r\n                        Enter your email address and we will send you further instructions\r\n                    </p>\r\n                    <div>\r\n                        <button className={style.mainButton} onClick={onSendEmail}>Send Instructions</button>\r\n                    </div>\r\n                </div>\r\n                <div className={style.askAboutAccount} onClick={onRedirectToLogin}>\r\n                    <span>Did you remember your password?</span>\r\n                </div>\r\n                <div className={style.tryLogin} onClick={onRedirectToLogin}>\r\n                    <span>Try logging in</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordRecovery;\r\n","import React from 'react';\r\nimport './NewPassword.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setRecoveryFlag} from \"../../Redux/passwordRecoveryReducer\";\r\n\r\nconst NewPassword = () => {\r\nconst dispatch = useDispatch();\r\ndispatch(setRecoveryFlag(false))\r\n\r\n  return (\r\n      <div className=\"NewPassword\">\r\n          NewPassword\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default NewPassword;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"../../SuperComponents/SuperInputText/SuperInputText\";\r\nimport s from \"./Test.module.css\";\r\nimport SuperButton from \"../../SuperComponents/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../SuperComponents/SuperCheckBox/SuperCheckbox\";\r\n\r\nfunction Test() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            Test Component\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport './Component404.css';\r\n\r\nconst Component404 = () => {\r\n  return (\r\n      <div className=\"Component404\">\r\n        404: Page not found!\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Component404;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/login\"} activeClassName={s.activeLink}>Login</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to={\"/registration\"} activeClassName={s.activeLink}>Registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/profile\"} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/404\"} activeClassName={s.activeLink}>Component404</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/passwordRecovery\"} activeClassName={s.activeLink}>PasswordRecovery</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/newPassword\"} activeClassName={s.activeLink}>NewPassword</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/test\"} activeClassName={s.activeLink}>Test</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Navbar","import React from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from \"./components/Login/Login\";\r\nimport Registration from './components/Registration/Registartion';\r\nimport Profile from './components/Profile/Profile';\r\nimport PasswordRecovery from './components/PasswordRecovery/PasswordRecovery';\r\nimport NewPassword from './components/NewPassword/NewPassword';\r\nimport Test from \"./components/Test/Test\";\r\nimport Component404 from \"./components/404/Component404\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    registration: '/registration',\r\n    profile: '/profile',\r\n    Component404: '/404',\r\n    passwordRecovery: '/passwordRecovery',\r\n    newPassword: '/newPassword',\r\n    test: '/test'\r\n}\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Navbar />}/>\r\n                <Route path={PATH.login} render={() => <Login/>}/>\r\n                <Route path={PATH.registration} render={() => <Registration/>}/>\r\n                <Route path={PATH.profile} render={() => <Profile/>}/>\r\n                <Route path={PATH.Component404} render={() => <Component404/>}/>\r\n                <Route path={PATH.passwordRecovery} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.newPassword} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.test} render={() => <Test/>}/>\r\n                <Redirect from={'*'} to={\"/404\"}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport {store} from \"./Redux/redux_store\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Registartion_main__3uS6X\",\"mainBlock\":\"Registartion_mainBlock__3yB36\",\"title\":\"Registartion_title__3hMMm\",\"subTitle\":\"Registartion_subTitle__33gvb\",\"form\":\"Registartion_form__3ucK0\",\"formInput\":\"Registartion_formInput__1Chs7\",\"photoEye\":\"Registartion_photoEye__MY2Yr\",\"formInputLastChild\":\"Registartion_formInputLastChild__3GZe_\",\"formError\":\"Registartion_formError__vEfwM\",\"flexButtons\":\"Registartion_flexButtons__2r60e\",\"cancelButton\":\"Registartion_cancelButton__1zVLf\",\"logisterButton\":\"Registartion_logisterButton__SEjfC\"};"],"sourceRoot":""}